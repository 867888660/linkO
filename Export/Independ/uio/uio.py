from flask import Flask, jsonify, request
import hashlib
import json
import os
import re
import requests
import sys
import traceback
OutPutNum = 5
InPutNum = 5
Outputs = [{'Num': None, 'Kind': 'String', 'Id': 'SendMessage.py1715761489952_2', 'Context': None,'Boolean': False,'name': 'OutPut1','Link':0,'Description':'answer'}, {'Num': None, 'Kind': 'String', 'Id': 'SendMessage.py1716534692184_2', 'Context': None,'Boolean': False,'name': 'OutPut1','Link':0,'Description':'answer'}, {'Num': None, 'Kind': 'String', 'Id': 'SendMessage.py1717060272229_2', 'Context': None,'Boolean': False,'name': 'OutPut1','Link':0,'Description':'answer'}, {'Num': None, 'Kind': 'String', 'Id': 'RefreshBaidu1717061708619_1', 'Context': None,'Boolean': False,'name': 'OutPut1','Link':0,'Description':'answer'}, {'Num': None, 'Kind': 'String', 'Id': 'SendMessage1719130039551_2', 'Context': None,'Boolean': False,'name': 'OutPut1','Link':0,'Description':'answer'}]
Inputs = [{'Num': None, 'Context': '', 'Boolean': False, 'Kind': 'String', 'Id': 'Input1', 'IsLabel': False, 'name': 'Input1'}, {'Num': None, 'Context': '', 'Boolean': False, 'Kind': 'String', 'Id': 'Input2', 'IsLabel': True, 'name': '路径'}, {'Num': None, 'Context': '', 'Boolean': False, 'Kind': 'String', 'Id': 'Input3', 'IsLabel': True, 'name': '路径'}, {'Num': None, 'Context': '', 'Boolean': False, 'Kind': 'String', 'Id': 'Input4', 'IsLabel': True, 'name': '路径'}, {'Num': None, 'Context': '', 'Boolean': False, 'Kind': 'String', 'Id': 'Input5', 'IsLabel': True, 'name': '名字'}]
NodeKind = 'Normal'
nodes = [{"ErrorContext": "\u5b58\u5728\u672a\u8fde\u63a5\u7684\u5fc5\u8981\u8f93\u5165\u77db\u70b9", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u4e8b\u4ef6\u62a5\u544a\uff1a\n2024\u5e746\u670821\u65e5\uff0c\u9648\u4fca\u9633\u6570\u5b66\u8003\u8bd5\u4f5c\u5f0a\n\u6263\u5206\u52a0\u5206\u60c5\u51b5: \u6263\u5206", "Id": "Input1", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u6587\u672c"}, {"Boolean": False, "Context": "Unknown", "Id": "Input2", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u540d\u5b57"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 0, "Num": 0, "name": "OutPut1"}], "ReTryNum": 1, "TriggerLink": 1, "anchorPoints": [[0.03351425064775672, 0.6], [0.03351425064775672, 0.8], [0.9609000409109505, 0.6], [0.05585708441292786, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "hash": "76eaacccda7dc9dbe9323746a24a653c400c2409013fad05ecc6022cac55a250", "height": 40, "id": "SendMessage.py1715761489952", "inputStatus": [False, True, None, False], "isFinish": False, "label": "\u53d1\u5fae\u4fe1\u6d88\u606f", "name": "SendMessage.py", "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 179.0283203125, "x": 1842.1087910868764, "y": 280.63717423194635}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output21715846670348\": \"\u5de5\u5177\u540d\u79f0\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u804c\u8d23\u662f\u5de5\u5177\u8c03\u7528\u5458\uff0c\u4f60\u9700\u8981\u6839\u636e\u7528\u6237\u8981\u6c42\uff0c\u6765\u9009\u62e9\u8c03\u7528\u5408\u9002\u7684\u5de5\u5177\u3002\n\u8fd9\u662f\u7528\u6237\u8981\u6c42\"\u9648\u535a\u9716\u5728\u6821\u5916\u8ddf\u4eba\u6253\u53f0\u7403\uff0c\u8d4c\u535a\uff0c\u8d4c\u8d62\u4e00\u6b21400\uff0c\u4ed6\u8f93\u4e86\u51e0\u5343\u3002\"\n\u4e8b\u4ef6\u5f55\u5165\uff1a\u5f55\u5165\u7279\u5b9a\u7684\u4e8b\u4ef6\uff08\u6bd4\u65b9\u8bf4\u67d0\u5e74\u67d0\u6708\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff09\n\u4e8b\u4ef6\u67e5\u8be2\uff1a\u4efb\u4f55\u8ddf\u67e5\u8be2\u6570\u636e\u5e93\u76f8\u5173\u7684,\u6bd4\u5982\u201c\u8fd9\u4e2a\u6708\u53d1\u4ec0\u4e48\u91cd\u8981\u7684\u4e8b\u60c5\u201d\uff08\u8bf8\u5982\u6b64\u7c7b\uff09\n\u597d\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002\n\nPlease ensure the output is in JSON format\n{\n\"Output21715846670348\": \"\u5de5\u5177\u540d\u79f0\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u56e0\u4e3a\u4ed6\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u9648\u70af\u57ce\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9", "Id": "Input11715846657903", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u539f\u6587"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "\u5de5\u5177\u540d\u79f0", "Id": "Output21715846670348", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u5de5\u5177"}], "ReTryNum": 1, "Top_p": 0.75, "TriggerLink": 1, "anchorPoints": [[0.039473937820838176, 0.75], [0.9539470725423554, 0.75], [0.06578989636806364, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ed5cc43e09e507e977545825bd62844ffa0c99afd45ba9b592a010239d373a1a", "height": 20, "id": "Gpt.py1715846651879", "inputStatus": [False, None, False], "isFinish": False, "label": "\u5de5\u5177\u4f7f\u7528", "max_tokens": 4096, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u804c\u8d23\u662f\u5de5\u5177\u8c03\u7528\u5458\uff0c\u4f60\u9700\u8981\u6839\u636e\u7528\u6237\u8981\u6c42\uff0c\u6765\u9009\u62e9\u8c03\u7528\u5408\u9002\u7684\u5de5\u5177\u3002\n\u8fd9\u662f\u7528\u6237\u8981\u6c42\"{{\u539f\u6587}}\"\n\u4e8b\u4ef6\u5f55\u5165\uff1a\u5f55\u5165\u7279\u5b9a\u7684\u4e8b\u4ef6\uff08\u6bd4\u65b9\u8bf4\u67d0\u5e74\u67d0\u6708\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff09\n\u4e8b\u4ef6\u67e5\u8be2\uff1a\u4efb\u4f55\u8ddf\u67e5\u8be2\u6570\u636e\u5e93\u76f8\u5173\u7684,\u6bd4\u5982\u201c\u8fd9\u4e2a\u6708\u53d1\u4ec0\u4e48\u91cd\u8981\u7684\u4e8b\u60c5\u201d\uff08\u8bf8\u5982\u6b64\u7c7b\uff09\n\u597d\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002\n", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 151.9990234375, "x": -12.419718708191454, "y": -155.19747751867064}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"\" (you need output type: Trigger)\n\"Output21716276533660\": \"undefined\" (you need output type: Trigger)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"\" (you need output type: Trigger)\n\"Output21716276533660\": \"undefined\" (you need output type: Trigger)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u4e8b\u4ef6\u5f55\u5165", "Id": "Input11715847198574", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u5de5\u5177"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "IfNode", "Outputs": [{"Boolean": False, "Context": "", "Description": "", "Id": "Output1", "Kind": "Trigger", "Link": 1, "Num": 0, "name": "\u4e8b\u4ef6\u5f55\u5165", "selectBox1": "\u5de5\u5177", "selectBox2": "include", "selectBox3": "\u4e8b\u4ef6\u5f55\u5165", "selectKind": "String", "selectNum": 0}, {"Boolean": False, "Context": "", "Id": "Output21716276533660", "IsLabel": False, "Isnecessary": True, "Kind": "Trigger", "Link": 1, "Num": 0, "name": "\u4e8b\u4ef6\u67e5\u8be2", "selectBox1": "\u5de5\u5177", "selectBox2": "include", "selectBox3": "\u4e8b\u4ef6\u67e5\u8be2", "selectKind": "String", "selectNum": 0}], "TriggerLink": 0, "anchorPoints": [[0.03409090909090909, 0.6], [0.9602272727272727, 0.6], [0.9602272727272727, 0.8], [0.056818181818181816, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "hash": "2e72f423b86ccef76144b09929ade4000e18e10d3146be24f54f6922809c0981", "height": 40, "id": "IfNode.py1715847195096", "inputStatus": [False], "isFinish": False, "label": "\u5de5\u5177\u9009\u62e9", "name": "IfNode.py", "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 176, "x": 246.46136259716536, "y": -184.6210943453742}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"\u751f\u6210\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65e5\u671f\u65e5\u671f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u4e3a 'xxxx-xx-xx'\u3002\" (you need output type: String)\n\"Output21715761424540\": \"\u8bf7\u63cf\u8ff0\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5185\u5bb9\u3002\" (you need output type: String)\n\"Output41717426415626\": \"\u8bf7\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u4e3a 'name1-descript1$$name2-descript2$$name3-descript3'\uff0c\u63cf\u8ff0\u6d89\u53ca\u7684\u4e3b\u8981\u89d2\u8272\u53ca\u5176\u76f8\u5173\u63cf\u8ff0\u3002\n\" (you need output type: String)\n}\n", "ExprotPrompt": "\"role\": \"\u4e8b\u4ef6\u5206\u6790\u5458\",\n  \"task\": \"\u5206\u6790\u4e8b\u4ef6\u5e76\u751f\u6210\u6240\u9700\u7684\u8f93\u51fa\uff0c\u5e76\u4e25\u683c\u6309\u7167event_description\uff0c\u63cf\u8ff0\u6bcf\u4e2a\u4eba\u7269\u5728\u4e8b\u4ef6\u4e2d\u7684\u5173\u7cfb\",\n  \"event_description\": \"\u9648\u535a\u9716\u5728\u6821\u5916\u8ddf\u4eba\u6253\u53f0\u7403\uff0c\u8d4c\u535a\uff0c\u8d4c\u8d62\u4e00\u6b21400\uff0c\u4ed6\u8f93\u4e86\u51e0\u5343\u3002\",\n  \"current_date\": \"2024-06-24\",\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"\u751f\u6210\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65e5\u671f\u65e5\u671f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u4e3a 'xxxx-xx-xx'\u3002\" (you need output type: String)\n\"Output21715761424540\": \"\u8bf7\u63cf\u8ff0\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5185\u5bb9\u3002\" (you need output type: String)\n\"Output41717426415626\": \"\u8bf7\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u4e3a 'name1-descript1$$name2-descript2$$name3-descript3'\uff0c\u63cf\u8ff0\u6d89\u53ca\u7684\u4e3b\u8981\u89d2\u8272\u53ca\u5176\u76f8\u5173\u63cf\u8ff0\u3002\n\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u56e0\u4e3a\u4ed6\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u9648\u70af\u57ce\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9", "Id": "Input11715761406972", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u539f\u6587"}, {"Context": "2024-06-30", "Id": "Input21717385554197", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "Time"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "\u751f\u6210\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65e5\u671f\u65e5\u671f\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u4e3a 'xxxx-xx-xx'\u3002", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u65f6\u95f4"}, {"Boolean": False, "Context": "", "Description": "\u8bf7\u63cf\u8ff0\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5185\u5bb9\u3002", "Id": "Output21715761424540", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u4e8b\u4ef6"}, {"Boolean": False, "Context": "", "Description": "\u8bf7\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u683c\u5f0f\u4e3a 'name1-descript1$$name2-descript2$$name3-descript3'\uff0c\u63cf\u8ff0\u6d89\u53ca\u7684\u4e3b\u8981\u89d2\u8272\u53ca\u5176\u76f8\u5173\u63cf\u8ff0\u3002\n", "Id": "Output41717426415626", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u4eba\u7269-\u4e8b\u4ef6"}], "ReTryNum": 1, "Top_p": 0.75, "TriggerLink": 1, "anchorPoints": [[0.03294687959159597, 0.5], [0.03294687959159597, 0.6666666666666666], [0.9615619738098047, 0.5], [0.9615619738098047, 0.6666666666666666], [0.9615619738098047, 0.8333333333333334], [0.05491146598599329, 0.08333333333333333]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ed5cc43e09e507e977545825bd62844ffa0c99afd45ba9b592a010239d373a1a", "height": 60, "id": "Gpt.py1716518404189", "inputStatus": [False, True, None, None, None, False], "isFinish": False, "label": "\u4e8b\u4ef6\u5206\u6790", "max_tokens": 1916, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\"role\": \"\u4e8b\u4ef6\u5206\u6790\u5458\",\n  \"task\": \"\u5206\u6790\u4e8b\u4ef6\u5e76\u751f\u6210\u6240\u9700\u7684\u8f93\u51fa\uff0c\u5e76\u4e25\u683c\u6309\u7167event_description\uff0c\u63cf\u8ff0\u6bcf\u4e2a\u4eba\u7269\u5728\u4e8b\u4ef6\u4e2d\u7684\u5173\u7cfb\",\n  \"event_description\": \"{{\u539f\u6587}}\",\n  \"current_date\": \"{{Time}}\",", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 182.111328125, "x": 791.3225141120498, "y": 58.29579221609046}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Context": "**2\n024\u5e746\u6708\u9648\u4fca\u9633\u4e0d\u826f\u884c\u4e3a\u4e8b\u4ef6\u62a5\u544a**\n\n**\u6458\u8981**\uff1a\n\u672c\u62a5\u544a\u6982\u8ff0\u4e862024\u5e746\u6708\u6d89\u53ca\u9648\u4fca\n\u9633\u7684\u4e24\u8d77\u4e0d\u826f\u884c\u4e3a\u4e8b\u4ef6\uff1a6\u670821\u65e5\u7684\u6570\u5b66\u8003\u8bd5\u4f5c\u5f0a\u4e8b\u4ef6\u548c6\u670810\u65e5\u4e0e\u9648\u5efa\u660e\u7684\u6253\u67b6\u4e8b\u4ef6\u3002\n\u62a5\u544a\u8be6\u7ec6\u63cf\u8ff0\u4e86\u4e8b\u4ef6\u7684\u7ecf\u8fc7\uff0c\u6d89\u53ca\u4eba\u5458\u53ca\u5b66\u6821\u7684\u5904\u7406\u63aa\u65bd\u3002\n\n\n**\u6b63\u6587**\uff1a\n\n1. **\u6570\u5b66\u8003\u8bd5\u4f5c\u5f0a\u4e8b\u4ef6**\uff1a\n\n* **\u4e8b\u4ef6\u7ecf\u8fc7**\uff1a2024\u5e746\u670821\u65e5\uff0c\n\u9648\u4fca\u9633\u5728\u6570\u5b66\u8003\u8bd5\u671f\u95f4\u88ab\u76d1\u8003\u8001\u5e08\u53d1\u73b0\u4f5c\u5f0a\u3002\n\u76d1\u8003\u8001\u5e08\u8bb0\u5f55\u4e86\u8fd9\u4e00\u60c5\u51b5\uff0c\u5e76\u7acb\u5373\u4e0a\u62a5\u7ed9\u5b66\u6821\u7ba1\u7406\u5c42\u3002\n\n* **\u5b66\u6821\u5904\u7406**\uff1a\u5b66\u6821\u7ba1\u7406\u5c42\u8fc5\u901f\u4ecb\u5165\uff0c\u5bf9\u9648\u4fca\u9633\u8fdb\u884c\u4e86\u8be2\u95ee\u548c\u8c03\u67e5\u3002\n\u6839\u636e\u5b66\u6821\u89c4\u5b9a\uff0c\u9648\u4fca\u9633\u56e0\u4f5c\u5f0a\u53d7\u5230\u4e86\u76f8\u5e94\u5904\u7f5a\u3002\n\n2. **\u4e0e\u9648\u5efa\u660e\u6253\u67b6\u4e8b\u4ef6**\uff1a\n\n* **\u4e8b\u4ef6\u7ecf\u8fc7**\uff1a2024\u5e746\u670810\u65e5\uff0c\u9648\u4fca\u9633\u4e0e\u9648\n\u5efa\u660e\u53d1\u751f\u80a2\u4f53\u51b2\u7a81\u3002\n\n* **\u5b66\u6821\u5904\u7406**\uff1a\u8be5\u4e8b\u4ef6\u88ab\u5b66\u6821\u7ba1\u7406\u5c42\u6ce8\u610f\u5230\uff0c\u5e76\u8fdb\u884c\u4e86\u76f8\u5e94\u7684\u8c03\u67e5\u548c\u5904\u7406\u3002\uff08\u6ce8\uff1a\u7531\u4e8e\u7528\u6237\u672a\u63d0\u4f9b\u5177\u4f53\u5904\u7406\u7ec6\u8282\uff0c\u6b64\u5904\n\u65e0\u6cd5\u8be6\u7ec6\u63cf\u8ff0\uff09\n\n**\u7ed3\u8bba**\uff1a\n\n1. **\u8bfe\u5802\u7eaa\u5f8b\u4e0e\u5b66\u672f\u8bda\u4fe1**\uff1a\u9648\u4fca\u9633\u7684\u4f5c\u5f0a\u884c\u4e3a\u4e25\u91cd\u8fdd\u53cd\u4e86\u5b66\u672f\u8bda\u4fe1\u548c\u8bfe\u5802\u7eaa\u5f8b\uff0c\u8fd9\u5bf9\n\u4ed6\u7684\u4e2a\u4eba\u58f0\u8a89\u548c\u5b66\u672f\u524d\u9014\u90fd\u9020\u6210\u4e86\u8d1f\u9762\u5f71\u54cd\u3002\n\u6b64\u4e8b\u4ef6\u518d\u6b21\u5f3a\u8c03\u4e86\u52a0\u5f3a\u8bda\u4fe1\u6559\u80b2\u548c\u8bfe\u5802\u7eaa\u5f8b\u7684\u91cd\u8981\u6027\u3002\n\n2. **\u4eba\u9645\u4ea4\u5f80\u4e0e\u51b2\u7a81\u89e3\u51b3**\uff1a\u9648\u4fca\u9633\u4e0e\u9648\u5efa\u660e\u7684\u6253\u67b6\u4e8b\u4ef6\u53cd\u6620\u51fa\u5b66\u751f\u5728\u4eba\u9645\u4ea4\u5f80\u548c\u51b2\u7a81\u89e3\u51b3\u65b9\u9762\u7684\u4e0d\u8db3\u3002\n\u5b66\u6821\u5e94\u63d0\u4f9b\u66f4\u591a\u5173\u4e8e\u51b2\u7a81\u89e3\u51b3\u548c\u4eba\u9645\u4ea4\u5f80\u7684\u6559\u80b2\u548c\u5f15\u5bfc\uff0c\u4ee5\u5e2e\u52a9\u5b66\u751f\u66f4\u597d\u5730\u5904\u7406\u7c7b\u4f3c\u60c5\u51b5\u3002\n\n3. **\u5b66\u6821\u7ba1\u7406\u4e0e\u5e72\u9884**\uff1a\u5b66\u6821\u7ba1\u7406\u5c42\u5728\u4e24\u6b21\u4e8b\u4ef6\u4e2d\u7684\u8fc5\u901f\u4ecb\u5165\u548c\u5904\u7406\u4f53\u73b0\u4e86\u5176\u5bf9\u6821\u56ed\u7eaa\u5f8b\u548c\u79e9\u5e8f\u7684\u7ef4\u62a4\u51b3\u5fc3\u3002\n\u7136\u800c\uff0c\u4e3a\u4e86\u9884\u9632\u7c7b\u4f3c\u4e8b\u4ef6\u7684\u518d\u6b21\u53d1\u751f\uff0c\u5b66\u6821\u8fd8\u9700\u52a0\u5f3a\u65e5\u5e38\u6559\u80b2\u548c\u7ba1\u7406\uff0c\u8425\u9020\u4e00\u4e2a\u66f4\u52a0\u548c\u8c10\u3001\u6709\u5e8f\u7684\u6821\u56ed\u73af\u5883\u3002\n\n4. **\u4e2a\u6027\u5316\u6559\u80b2\u4e0e\u8f85\u5bfc**\uff1a\u9488\u5bf9\u9648\u4fca\u9633\u7b49\u4e2a\u522b\u5b66\u751f\u7684\u95ee\u9898\u884c\u4e3a\uff0c\u5b66\u6821\u5e94\u8003\u8651\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u6559\u80b2\u548c\u5fc3\u7406\u8f85\u5bfc\uff0c\u5e2e\u52a9\u4ed6\u4eec\u8ba4\u8bc6\u5230\u81ea\u8eab\u884c\u4e3a\u7684\u540e\u679c\uff0c\n\u5e76\u5f15\u5bfc\u4ed6\u4eec\u8d70\u5411\u6b63\u8f68\u3002", "Id": "Input1", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u6587\u672c"}, {"Boolean": False, "Context": "Unknown", "Id": "Input2", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u540d\u5b57"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 0, "Num": 0, "name": "OutPut1"}], "TriggerLink": 1, "anchorPoints": [[0.03351425064775672, 0.6], [0.03351425064775672, 0.8], [0.9609000409109505, 0.6], [0.05585708441292786, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "hash": "76eaacccda7dc9dbe9323746a24a653c400c2409013fad05ecc6022cac55a250", "height": 40, "id": "SendMessage.py1716534692184", "inputStatus": [False, True, None, False], "isFinish": False, "label": "\u53d1\u5fae\u4fe1\u6d88\u606f1", "name": "SendMessage.py", "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 179.0283203125, "x": 2168.518061271149, "y": 168.88233187377983}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\":\"\"(you need output type:)\n\"Output21717055988191\":\"undefined\"(you need output type:)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output1\":\"\"(you need output type:)\n\"Output21717055988191\":\"undefined\"(you need output type:)\n}\n", "Inputs": [{"Context": "Unknown", "Id": "Input11717055921441", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u540d\u5b57"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "IfNode", "Outputs": [{"Boolean": False, "Context": "", "Description": "", "Id": "Output1", "Kind": "Trigger", "Link": 1, "Num": 0, "name": "\u6559\u5e08", "selectBox1": "\u540d\u5b57", "selectBox2": "include", "selectBox3": "1\u963f\u4e09\u5927\u82cf\u6253\u5b9e\u6253\u5b9e\u64e6\u62ed", "selectKind": "String", "selectNum": 0}, {"Boolean": False, "Context": "", "Id": "Output21717055988191", "IsLabel": False, "Isnecessary": True, "Kind": "Trigger", "Link": 1, "Num": 0, "name": "\u5b66\u751f", "selectBox1": "\u540d\u5b57", "selectBox2": "include", "selectBox3": "zoro", "selectKind": "String", "selectNum": 0}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.039473937820838176, 0.6], [0.9539470725423554, 0.6], [0.9539470725423554, 0.8], [0.06578989636806364, 0.1]], "depth": 0, "draggable": False, "firstRun": False, "frequency_penalty": 0, "hash": "2e72f423b86ccef76144b09929ade4000e18e10d3146be24f54f6922809c0981", "height": 40, "id": "IfNode1717055917650", "inputStatus": [True], "isFinish": True, "label": "\u5224\u65ad\u6d88\u606f\u6e90", "max_tokens": 512, "name": "IfNode", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 151.9990234375, "x": -565.0870726948046, "y": 37.90470626090212}, {"ErrorContext": "", "ExprotAfterPrompt": "", "ExprotPrompt": "", "Inputs": [], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Trigger", "Outputs": [{"Boolean": False, "Context": "Unknown", "Description": "", "Id": "Output1", "Kind": "String", "Link": 1, "Num": None, "name": "\u540d\u5b57"}, {"Boolean": False, "Context": "\u535a\u9716\u770b\u5230\u5176\u4ed6\u540c\u5b66\u5728\u5272\u624b\uff0c\u89c9\u5f97\u597d\u73a9\uff0c\u5c31\u8ba9\u4fca\u9633\u4e00\u8d77\u73a9\uff0c\u4f46\u5b87\u7fd4\u548c\u6d69\u8bfa\u5bf9\u4e8e\u5a01\u80c1\u5e76\u4e0d\u77e5\u60c5", "Description": "", "Id": "Output2", "Kind": "String", "Link": 1, "Num": None, "name": "\u539f\u6587"}], "ReTryNum": 1, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.9527027027027027, 0.6], [0.9527027027027027, 0.8], [0.06756756756756757, 0.1]], "depth": 0, "draggable": False, "frequency_penalty": 0, "hash": "5ff1bbcd61c22d6209f4e6aaf3f6f6c248b95aad53b5832ce69733741883052b", "height": 40, "id": "WeChatTrigger1717056060217", "isFinish": False, "label": "\u5fae\u4fe1\u6d88\u606f", "max_tokens": 512, "name": "WeChatTrigger", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 148, "x": -944.4299649443681, "y": 160.6700198140528}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"\u65f6\u95f4\u6bb5\uff0c\u4e0d\u8981\u6709\u591a\u4f59\u7684\u63cf\u8ff0\" (you need output type: String)\n\"Output21717395951252\": \"\u5982\u6ca1\u6709\u53ef\u4ee5\u4e0d\u7528\u586b\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u64cd\u4f5c\u5458\uff0c\u4f60\u6839\u636e\u7528\u6237\u7684\u8981\u6c42\uff0c\u5411\u7cfb\u7edf\u63d0\u4ea4\u4e00\u4efd\u5305\u542b\u5e74\u6708\u65e5\u7684\u65f6\u95f4\u6bb5\uff0c\u4e2d\u95f4\u7528%%\u8fdb\u884c\u5206\u5272\n\u4f8b\u59822024-03-21%%2024-03-23\u3002\n\u4f60\u8fd8\u6709\u627e\u5230\u6587\u672c\u4e2d\u5bf9\u5e94\u7684\u4eba\u7269\u540d\u5b57\n\u4ee5\u4e0b\u662f\u7528\u6237\u8981\u6c42\uff1a\n\u4eca\u5929\u6211\u88ab\u6253\u4e86\u4e00\u987f\n\u4ee5\u4e0b\u662f\u4eca\u5929\u7684\u65f6\u95f4\n2024-05-11\n\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"\u65f6\u95f4\u6bb5\uff0c\u4e0d\u8981\u6709\u591a\u4f59\u7684\u63cf\u8ff0\" (you need output type: String)\n\"Output21717395951252\": \"\u5982\u6ca1\u6709\u53ef\u4ee5\u4e0d\u7528\u586b\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u56e0\u4e3a\u4ed6\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u9648\u70af\u57ce\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9", "Id": "Input11717056217073", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u539f\u6587"}, {"Context": "2024-06-30", "Id": "Input21717383985526", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u73b0\u5728\u65f6\u95f4"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "\u65f6\u95f4\u6bb5\uff0c\u4e0d\u8981\u6709\u591a\u4f59\u7684\u63cf\u8ff0", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u65e5\u671f"}, {"Boolean": False, "Context": "", "Description": "\u5982\u6ca1\u6709\u53ef\u4ee5\u4e0d\u7528\u586b", "Id": "Output21717395951252", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u4eba\u540d"}], "ReTryNum": 0, "Top_p": 0.75, "TriggerLink": 1, "anchorPoints": [[0.033333514179221896, 0.6], [0.033333514179221896, 0.8], [0.9611109001242412, 0.6], [0.9611109001242412, 0.8], [0.05555585696536982, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "3b5ef8f68dc3d1a2ae413b98dc2e6c263c8bab9090fff4e8cd191da1da776a03", "height": 40, "id": "Gpt-35-turbo1717056207234", "inputStatus": [False, True, None, None, False], "isFinish": False, "label": "\u67e5\u8be2", "max_tokens": 512, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u64cd\u4f5c\u5458\uff0c\u4f60\u6839\u636e\u7528\u6237\u7684\u8981\u6c42\uff0c\u5411\u7cfb\u7edf\u63d0\u4ea4\u4e00\u4efd\u5305\u542b\u5e74\u6708\u65e5\u7684\u65f6\u95f4\u6bb5\uff0c\u4e2d\u95f4\u7528%%\u8fdb\u884c\u5206\u5272\n\u4f8b\u59822024-03-21%%2024-03-23\u3002\n\u4f60\u8fd8\u6709\u627e\u5230\u6587\u672c\u4e2d\u5bf9\u5e94\u7684\u4eba\u7269\u540d\u5b57\n\u4ee5\u4e0b\u662f\u7528\u6237\u8981\u6c42\uff1a\n{{\u539f\u6587}}\n\u4ee5\u4e0b\u662f\u4eca\u5929\u7684\u65f6\u95f4\n{{\u73b0\u5728\u65f6\u95f4}}\n", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 179.9990234375, "x": 785.0585581466248, "y": 256.282535013294}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u56e0\u4e3a\u4ed6\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u9648\u70af\u57ce\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9", "Id": "Input1", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u6587\u672c"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Context": "", "Id": "Output11", "Kind": "String", "Link": 1, "Num": 0, "name": "\u5c0f\u52a9\u624b\u56de\u7b54", "Boolean": False}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 1, "anchorPoints": [[0.031578947368421054, 0.75], [0.9631578947368421, 0.75], [0.05263157894736842, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "68844bf1e6279ee85ed2f3b15f9b1493635640f7940e9a1bb076c0c3eeee4c9f", "height": 20, "id": "SendBaidu1717060261608", "inputStatus": [False, None, False], "isFinish": False, "label": "baiduappbuilder-\u65ad\u6848\u5c0f\u52a9\u624b", "max_tokens": 512, "name": "SendBaidu", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 190, "x": -72.40374919613464, "y": 358.2888112430215}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u2661\u2661\u2661\u5b8c\u6574\u4e8b\u4ef6\u62a5\u544a\n\n\u4e00\u3001\u4eba\u7269\n\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\n2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\n\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u56db\u3001\u4f60\u597d\u5c0f\u670b\u53cb\uff0c\u611f\u8c22\u4f60\u63d0\u4f9b\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u6216\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002", "Id": "Input1", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u6587\u672c"}, {"Boolean": False, "Context": "Unknown", "Id": "Input2", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u540d\u5b57"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 0, "Num": 0, "name": "OutPut1"}], "ReTryNum": 1, "TriggerLink": 1, "anchorPoints": [[0.03351425064775672, 0.6], [0.03351425064775672, 0.8], [0.9609000409109505, 0.6], [0.05585708441292786, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "hash": "76eaacccda7dc9dbe9323746a24a653c400c2409013fad05ecc6022cac55a250", "height": 40, "id": "SendMessage.py1717060272229", "inputStatus": [False, True, None, False], "isFinish": False, "label": "\u5fae\u4fe1\u6d88\u606f\u5c0f\u52a9\u624b", "name": "SendMessage.py", "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 179.0283203125, "x": 782.3309509219064, "y": 509.96455130693914}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"\" (you need output type: Trigger)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"\" (you need output type: Trigger)\n}\n", "Inputs": [{"Context": "\u2661\u2661\u2661\u5b8c\u6574\u4e8b\u4ef6\u62a5\u544a\n\n\u4e00\u3001\u4eba\u7269\n\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\n2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\n\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u56db\u3001\u4f60\u597d\u5c0f\u670b\u53cb\uff0c\u611f\u8c22\u4f60\u63d0\u4f9b\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u6216\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002", "Id": "Input11717060684723", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u5c0f\u52a9\u624b\u56de\u7b54"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "IfNode", "Outputs": [{"Boolean": False, "Context": "", "Description": "", "Id": "Output1", "Kind": "Trigger", "Link": 1, "Num": 0, "name": "\u2661\u2661\u2661", "selectBox1": "\u5c0f\u52a9\u624b\u56de\u7b54", "selectBox2": "include", "selectBox3": "\u2661\u2661\u2661", "selectKind": "String", "selectNum": 0}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.030927990737711106, 0.75], [0.963917344139337, 0.75], [0.051546651229518514, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "2e72f423b86ccef76144b09929ade4000e18e10d3146be24f54f6922809c0981", "height": 20, "id": "IfNode1717060626039", "inputStatus": [False], "isFinish": False, "label": "\u662f\u5426\u542b\u6709\u2661\u2661\u2661", "max_tokens": 512, "name": "IfNode", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 193.9990234375, "x": 379.55191451167684, "y": 648.8706328642319}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u4f60\u597d\uff01\n\u6211\u662f\u8c03\u67e5\u5458\u5c0f\u5e2e\u3002\n\u8bf7\u95ee\u4f60\u6709\u4ec0\u4e48\u9700\u8981\u8c03\u67e5\u7684\u4e8b\u60c5\u5417\uff1f\n\u6211\u4f1a\u5c3d\u529b\u5e2e\u52a9\u4f60\u54e6\uff01", "Id": "Input1", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 0, "Num": None, "isConnected": False, "name": "Input1"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 0, "Num": 0, "name": "OutPut1"}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 1, "anchorPoints": [[0.03351425064775672, 0.75], [0.9609000409109505, 0.75], [0.05585708441292786, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "4ea4dfee5ad89843ea9f6a3ffc31f81028ae3e9d4658107ec7c0c2b98031c484", "height": 20, "id": "RefreshBaidu1717061708619", "inputStatus": [False, None, False], "isFinish": False, "label": "\u5237\u65b0\u767e\u5ea6", "max_tokens": 512, "name": "RefreshBaidu", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 179.0283203125, "x": 783.5212620027437, "y": 712.7585733882029}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\":\"undefined\"(you need output type:String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\":\"undefined\"(you need output type:String)\n}\n", "Inputs": [], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Context": "2024-06-30", "Id": "Output11", "Kind": "String", "Link": 1, "Num": None, "name": "\u73b0\u5728\u65f6\u95f4"}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.9602272727272727, 0.75], [0.056818181818181816, 0.125]], "depth": 0, "draggable": False, "firstRun": False, "frequency_penalty": 0, "hash": "962282505490d5a516cea1994879b8a387ee61cdc15a0a650adba2a2265f95d9", "height": 20, "id": "QueryTime1717383971815", "inputStatus": [], "isFinish": True, "label": "\u73b0\u5728\u7684\u65f6\u95f4", "max_tokens": 512, "name": "QueryTime", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 176, "x": 384.48641021925914, "y": 414.21012137022024}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"date,\u683c\u5f0fxxxx-xx-xx\" (you need output type: String)\n\"Output21715761424540\": \"\u4e8b\u4ef6\u63cf\u8ff0\" (you need output type: String)\n\"Output41717426415626\": \"name1-descript1$$name2-descript2$$name3-\n-descript3\n\n\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u4f4d\u4e8b\u4ef6\u5206\u6790\u5458\n\u4ee5\u4e0b\u662f\u4e8b\u4ef6\u9648\u8ff0\n\u2661\u2661\u2661\u5b8c\u6574\u4e8b\u4ef6\u62a5\u544a\n\n\u4e00\u3001\u4eba\u7269\n\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\n2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\n\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u56db\u3001\u4f60\u597d\u5c0f\u670b\u53cb\uff0c\u611f\u8c22\u4f60\u63d0\u4f9b\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u6216\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002\n\u8fd9\u662f\u4eca\u5929\u7684\u65f6\u95f4\n2024-06-30\n\u4f60\u9700\u8981\u7f57\u5217\u51fa\u4e8b\u4ef6\u63cf\u8ff0\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u4eba\u4e0e\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5173\u7cfb\n\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"date,\u683c\u5f0fxxxx-xx-xx\" (you need output type: String)\n\"Output21715761424540\": \"\u4e8b\u4ef6\u63cf\u8ff0\" (you need output type: String)\n\"Output41717426415626\": \"name1-descript1$$name2-descript2$$name3-\n-descript3\n\n\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u2661\u2661\u2661\u5b8c\u6574\u4e8b\u4ef6\u62a5\u544a\n\n\u4e00\u3001\u4eba\u7269\n\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\n2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\n\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u56db\u3001\u4f60\u597d\u5c0f\u670b\u53cb\uff0c\u611f\u8c22\u4f60\u63d0\u4f9b\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u6216\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002", "Id": "Input11715761406972", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u539f\u6587"}, {"Context": "2024-06-30", "Id": "Input21717385554197", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "Time"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "date,\u683c\u5f0fxxxx-xx-xx", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u65f6\u95f4"}, {"Boolean": False, "Context": "", "Description": "\u4e8b\u4ef6\u63cf\u8ff0", "Id": "Output21715761424540", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u4e8b\u4ef6"}, {"Boolean": False, "Context": "", "Description": "name1-descript1$$name2-descript2$$name3-\n-descript3\n\n", "Id": "Output41717426415626", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u4eba\u7269-\u4e8b\u4ef6"}], "ReTryNum": 1, "Top_p": 0.75, "TriggerLink": 1, "anchorPoints": [[0.03294687959159597, 0.5], [0.03294687959159597, 0.6666666666666666], [0.9615619738098047, 0.5], [0.9615619738098047, 0.6666666666666666], [0.9615619738098047, 0.8333333333333334], [0.05491146598599329, 0.08333333333333333]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ed5cc43e09e507e977545825bd62844ffa0c99afd45ba9b592a010239d373a1a", "height": 60, "id": "Gpt-35-turbo.py1717490780107", "inputStatus": [False, True, None, None, None, False], "isFinish": False, "label": "\u4e8b\u4ef6\u5206\u67901", "max_tokens": 1889, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u4f4d\u4e8b\u4ef6\u5206\u6790\u5458\n\u4ee5\u4e0b\u662f\u4e8b\u4ef6\u9648\u8ff0\n{{\u539f\u6587}}\n\u8fd9\u662f\u4eca\u5929\u7684\u65f6\u95f4\n{{Time}}\n\u4f60\u9700\u8981\u7f57\u5217\u51fa\u4e8b\u4ef6\u63cf\u8ff0\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u4eba\u4e0e\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u5173\u7cfb\n", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 182.111328125, "x": 788.8318345780623, "y": 829.0244712018831}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Context": "Event: 2024\u5e746\u670821\u65e5\uff0c\u9648\u4fca\u9633\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a\u3002 on 2024-06-21 00:00:00\n\u9648\u4fca\u9633-\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a\n\u76d1\u8003\u8001\u5e08-\u8d1f\u8d23\u76d1\u7763\u8003\u8bd5\u5e76\u53d1\u73b0\u4e86\u4f5c\u5f0a\u884c\u4e3a\n\u5b66\u6821\u7ba1\u7406\u5c42-\u5904\u7406\u548c\u8c03\u67e5\u6b64\u4e8b\u4ef6\n***\nEvent: 2024\u5e746\u670810\u65e5\uff0c\u9648\u4fca\u9633\u8ddf\u9648\u5efa\u660e\u6253\u67b6\u3002 on 2024-06-10 00:00:00\n\u9648\u4fca\u9633-\u4e0e\u9648\u5efa\u660e\u53d1\u751f\u4e86\u80a2\u4f53\u51b2\u7a81\n\u9648\u5efa\u660e-\u4e0e\u9648\u4fca\u9633\u53d1\u751f\u4e86\u80a2\u4f53\u51b2\u7a81", "Id": "Input1", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u4e8b\u4ef6\u6c47\u603b"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 1, "Num": 0, "name": "OutPut1"}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.033333514179221896, 0.75], [0.9611109001242412, 0.75], [0.05555585696536982, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "b03aca76a1e78d2df6ee0f2e9258912f76865d1a9296ad5cda26939960f8c238", "height": 20, "id": "SendBaiduConclusion1717676780161", "inputStatus": [False], "isFinish": False, "label": "\u767e\u5ea6\u603b\u7ed3", "max_tokens": 512, "name": "SendBaiduConclusion", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 179.9990234375, "x": 1841.939714641679, "y": 394.2193070872924}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Context": "C:\\Users\\YMXD\\Desktop\\\u767e\u5ea6\u5c0f\u5e2e\u624b\\\\\u6570\u636e\u5e93.xlsx", "Id": "Input1", "IsLabel": True, "Isnecessary": True, "Kind": "String", "Link": 0, "Num": None, "isConnected": False, "name": "\u8def\u5f84"}, {"Boolean": False, "Context": "2024-06-01%%2024-06-23", "Id": "Input2", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u65e5\u671f"}, {"Boolean": False, "Context": "\u9648\u4fca\u9633", "Id": "Input3", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4eba\u540d"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 1, "Num": 0, "name": "\u4e8b\u4ef6\u6c47\u603b"}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.01215211504951631, 0.5], [0.01215211504951631, 0.6666666666666666], [0.01215211504951631, 0.8333333333333334], [0.985822532442231, 0.5], [0.02025352508252718, 0.08333333333333333]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "c12114348144159845686b3aa6cad3569c09cf41fae933c05c434a593d7b1321", "height": 60, "id": "QueryExcel1717761887164", "inputStatus": [False, False, False], "isFinish": False, "label": "Excel\u4e8b\u4ef6\u67e5\u8be2", "max_tokens": 512, "name": "QueryExcel", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 493.7412109375, "x": 1072.7490163536497, "y": 352.8881531534074}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "2024\u5e746\u670821\u65e5\uff0c\u9648\u4fca\u9633\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a\u3002", "Id": "Input1", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4e8b\u4ef6"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 1, "Num": 0, "name": "\u8fdd\u53cd\u73ed\u89c4"}], "ReTryNum": 2, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.03409090909090909, 0.75], [0.9602272727272727, 0.75], [0.056818181818181816, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "7d9d1826c576fa4156cde212d6cb8e3f0152525351b053c4ce20e061e0f0dcd2", "height": 20, "id": "GradeBaidu1718026137971", "inputStatus": [False], "isFinish": False, "label": "\u73ed\u7ea7\u6263\u5206", "max_tokens": 512, "name": "GradeBaidu", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 176, "x": 1036.1711952255584, "y": -184.07799802245356}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"name1%%+1&&name2%%-1\" (you need output type: String)\n\"Output21719128338297\": \"\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u6263\u5206\u4e0e\u52a0\u5206\u60c5\u51b5\uff0c\u6ca1\u6709\u6263\u5206\u5c31\u56de\u7b54\u65e0\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u540d\u73ed\u89c4\u5c0f\u52a9\u624b\uff0c\u4f60\u6839\u636e\u73ed\u89c4\u6765\u8fdb\u884c\u6263\u5206\u52a0\u51cf\u3002\n\u8fd9\u662f\u73ed\u89c4\uff1a\n\u4e00\u3001\u52a0\u5206\u9879\n1. \u4e0a\u8bfe\u4e3e\u624b\u53d1\u8a00\u4e14\u56de\u7b54\u6b63\u786e\uff0c\u52a01\u5206\u3002\n2. \u4f5c\u4e1a\u5b8c\u6210\u8ba4\u771f\uff08\u6709\u8d34\u7eb8\u7684\uff09\uff0c\u4f53\u73b0\u4e3a\u5b57\u8ff9\u5de5\u6574\uff0c\u53ca\u65f6\u4fee\u6539\u7b49\uff0c\u6bcf\u4e2a\u8d34\u7eb8\u52a01\u5206\u3002\n3. \u8bfe\u4e0b\u79ef\u6781\u63d0\u95ee\uff0c\u6bcf\u6b21\u52a01\u5206\u3002\uff08\u7531\u8001\u5e08\u5224\u65ad\u63d0\u95ee\u7684\u8d28\u91cf\u914c\u60c5\u52a0\u5206\uff09\n4. \u6bcf\u4e00\u8282\u8bfe\u6311\u9009\u4e00\u4f4d\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u52a05\u5206\uff08\u5c3d\u91cf\u4e00\u5468\u5185\u4e0d\u91cd\u590d\uff09\uff08\u5982\u679c\u6ca1\u6709\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u5219\u4e0d\u52a0\uff09\u3002\n\n\u4e8c\u3001\u6263\u5206\u9879\n5. \u9884\u5907\u94c3\u54cd\u4e86\u4e4b\u540e\u8fd8\u5728\u5b09\u620f\u6253\u95f9\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n6. \u6ca1\u6709\u8ba4\u771f\u8fdb\u884c\u8bfe\u524d\u8bfb\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n7. \u4e0a\u8bfe\u5f00\u5c0f\u5dee\u88ab\u8001\u5e08\u6279\u8bc4\u7684\uff0c\u62631\u5206\u3002\n8. \u4f5c\u4e1a\u6ca1\u5199\u62632\u5206\u3001\u5199\u6b20\u62631\u5206\uff0c\u5fd8\u8bb0\u5e26\u62631\u5206\u3002\n9. \u8bfe\u524d\u51c6\u5907\u4e0d\u5230\u4f4d\uff08\u6ca1\u6709\u5e26\u4e66\u7b49\uff09\u62631\u5206\u3002\n10. \u8bfe\u5802\u4e0a\u88ab\u63d0\u95ee\u4f46\u56de\u7b54\u9519\u8bef\u62631\u5206\u3002\n\n\u8fd9\u662f\u73ed\u7ea7\u4e8b\u4ef6\uff1a\n\u65f6\u95f4\uff1a\n2024\u5e746\u670821\u65e5\n\u5b66\u751f\u59d3\u540d\uff1a\u9648\u4fca\u9633\n\u4e8b\u4ef6\uff1a\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a\n\u73ed\u89c4\u5173\u8054\uff1a\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u73ed\u89c4\n\n\u8fd9\u662f\u8981\u6c42\uff1a\n\u8bf7\u786e\u4fdd\u4e0d\u8981\u6839\u636e\u73ed\u89c4\u4ee5\u5916\u7684\u4e8b\u4ef6\u8fdb\u884c\u6263\u5206\u6216\u52a0\u5206\u3002\n\u6211\u9700\u8981\u7684\u683c\u5f0f\u662f\u59d3\u540d1%%+1&&\u59d3\u540d2%%-1\u3002\u603b\u4e4b\u5c31\u662f\u59d3\u540d%%\u6263\u52a0\u5206\u503c \u7528&&\u8fdb\u884c\u533a\u5206\u3002\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"name1%%+1&&name2%%-1\" (you need output type: String)\n\"Output21719128338297\": \"\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u6263\u5206\u4e0e\u52a0\u5206\u60c5\u51b5\uff0c\u6ca1\u6709\u6263\u5206\u5c31\u56de\u7b54\u65e0\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u65f6\u95f4\uff1a\n2024\u5e746\u670821\u65e5\n\u5b66\u751f\u59d3\u540d\uff1a\u9648\u4fca\u9633\n\u4e8b\u4ef6\uff1a\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a\n\u73ed\u89c4\u5173\u8054\uff1a\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u73ed\u89c4", "Id": "Input11718026283102", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u8fdd\u53cd\u73ed\u89c4"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "name1%%+1&&name2%%-1", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u6263\u5206"}, {"Boolean": False, "Context": "", "Description": "\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u6263\u5206\u4e0e\u52a0\u5206\u60c5\u51b5\uff0c\u6ca1\u6709\u6263\u5206\u5c31\u56de\u7b54\u65e0", "Id": "Output21719128338297", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u6263\u5206\u60c5\u51b5"}], "ReTryNum": 0, "Top_p": 0.75, "TriggerLink": 0, "anchorPoints": [[0.033333514179221896, 0.6], [0.9611109001242412, 0.6], [0.9611109001242412, 0.8], [0.05555585696536982, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ee4c452c59981e35b77d21b21e7d70ff5d4d7ba34dcc714b5d46f52084848025", "height": 40, "id": "Gpt-4o1718026278679", "inputStatus": [False], "isFinish": False, "label": "\u6263\u5206\u7edf\u8ba1", "max_tokens": 512, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u540d\u73ed\u89c4\u5c0f\u52a9\u624b\uff0c\u4f60\u6839\u636e\u73ed\u89c4\u6765\u8fdb\u884c\u6263\u5206\u52a0\u51cf\u3002\n\u8fd9\u662f\u73ed\u89c4\uff1a\n\u4e00\u3001\u52a0\u5206\u9879\n1. \u4e0a\u8bfe\u4e3e\u624b\u53d1\u8a00\u4e14\u56de\u7b54\u6b63\u786e\uff0c\u52a01\u5206\u3002\n2. \u4f5c\u4e1a\u5b8c\u6210\u8ba4\u771f\uff08\u6709\u8d34\u7eb8\u7684\uff09\uff0c\u4f53\u73b0\u4e3a\u5b57\u8ff9\u5de5\u6574\uff0c\u53ca\u65f6\u4fee\u6539\u7b49\uff0c\u6bcf\u4e2a\u8d34\u7eb8\u52a01\u5206\u3002\n3. \u8bfe\u4e0b\u79ef\u6781\u63d0\u95ee\uff0c\u6bcf\u6b21\u52a01\u5206\u3002\uff08\u7531\u8001\u5e08\u5224\u65ad\u63d0\u95ee\u7684\u8d28\u91cf\u914c\u60c5\u52a0\u5206\uff09\n4. \u6bcf\u4e00\u8282\u8bfe\u6311\u9009\u4e00\u4f4d\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u52a05\u5206\uff08\u5c3d\u91cf\u4e00\u5468\u5185\u4e0d\u91cd\u590d\uff09\uff08\u5982\u679c\u6ca1\u6709\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u5219\u4e0d\u52a0\uff09\u3002\n\n\u4e8c\u3001\u6263\u5206\u9879\n5. \u9884\u5907\u94c3\u54cd\u4e86\u4e4b\u540e\u8fd8\u5728\u5b09\u620f\u6253\u95f9\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n6. \u6ca1\u6709\u8ba4\u771f\u8fdb\u884c\u8bfe\u524d\u8bfb\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n7. \u4e0a\u8bfe\u5f00\u5c0f\u5dee\u88ab\u8001\u5e08\u6279\u8bc4\u7684\uff0c\u62631\u5206\u3002\n8. \u4f5c\u4e1a\u6ca1\u5199\u62632\u5206\u3001\u5199\u6b20\u62631\u5206\uff0c\u5fd8\u8bb0\u5e26\u62631\u5206\u3002\n9. \u8bfe\u524d\u51c6\u5907\u4e0d\u5230\u4f4d\uff08\u6ca1\u6709\u5e26\u4e66\u7b49\uff09\u62631\u5206\u3002\n10. \u8bfe\u5802\u4e0a\u88ab\u63d0\u95ee\u4f46\u56de\u7b54\u9519\u8bef\u62631\u5206\u3002\n\n\u8fd9\u662f\u73ed\u7ea7\u4e8b\u4ef6\uff1a\n{{\u8fdd\u53cd\u73ed\u89c4}}\n\n\u8fd9\u662f\u8981\u6c42\uff1a\n\u8bf7\u786e\u4fdd\u4e0d\u8981\u6839\u636e\u73ed\u89c4\u4ee5\u5916\u7684\u4e8b\u4ef6\u8fdb\u884c\u6263\u5206\u6216\u52a0\u5206\u3002\n\u6211\u9700\u8981\u7684\u683c\u5f0f\u662f\u59d3\u540d1%%+1&&\u59d3\u540d2%%-1\u3002\u603b\u4e4b\u5c31\u662f\u59d3\u540d%%\u6263\u52a0\u5206\u503c \u7528&&\u8fdb\u884c\u533a\u5206\u3002\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 179.9990234375, "x": 1280.5789128049964, "y": -152.27151461780284}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n}\n", "Inputs": [{"Context": "C:\\Users\\YMXD\\Desktop\\\u767e\u5ea6\u5c0f\u5e2e\u624b\\\\\u6570\u636e\u5e93.xlsx", "Id": "Input1", "IsLabel": True, "Isnecessary": True, "Kind": "String", "Link": 0, "Num": None, "isConnected": False, "name": "\u8def\u5f84"}, {"Boolean": False, "Context": "2024-06-21", "Id": "Input2", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u65e5\u671f"}, {"Boolean": False, "Context": "2024\u5e746\u670821\u65e5\uff0c\u9648\u4fca\u9633\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a\u3002", "Id": "Input3", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4e8b\u4ef6"}, {"Boolean": False, "Context": "\u9648\u4fca\u9633-\u5728\u6570\u5b66\u8003\u8bd5\u4e2d\u4f5c\u5f0a$$\u76d1\u8003\u8001\u5e08-\u8d1f\u8d23\u76d1\u7763\u8003\u8bd5\u5e76\u53d1\u73b0\u4e86\u4f5c\u5f0a\u884c\u4e3a$$\u5b66\u6821\u7ba1\u7406\u5c42-\u5904\u7406\u548c\u8c03\u67e5\u6b64\u4e8b\u4ef6", "Id": "Input4", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4eba\u7269-\u4e8b\u4ef6"}, {"Boolean": False, "Context": "", "Id": "Input5", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u6263\u5206\u7edf\u8ba1"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.01215211504951631, 0.375], [0.01215211504951631, 0.5], [0.01215211504951631, 0.625], [0.01215211504951631, 0.75], [0.01215211504951631, 0.875], [0.02025352508252718, 0.0625]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "32d94c5e26e98e859c92e405d64030e0fecc0bcb5de76e646b7281088777be32", "height": 100, "id": "addExcel1718027435697", "inputStatus": [False, False, False, False, False], "isFinish": False, "label": "\u6dfb\u52a0\u4e8b\u4ef6", "max_tokens": 512, "name": "addExcel", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 493.7412109375, "x": 1851.3659503124525, "y": -170.10973936899848}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n}\n", "Inputs": [{"Context": "C:\\Users\\YMXD\\Desktop\\\u767e\u5ea6\u5c0f\u5e2e\u624b\\\\\u6570\u636e\u5e93.xlsx", "Id": "Input1", "IsLabel": True, "Isnecessary": True, "Kind": "String", "Link": 0, "Num": None, "isConnected": False, "name": "\u8def\u5f84"}, {"Boolean": False, "Context": "2024-06-14", "Id": "Input2", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u65e5\u671f"}, {"Boolean": False, "Context": "\u9648\u70af\u57ce\u5728\u8bfe\u5802\u4e0a\u4e00\u76f4\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u4e86\u8bfe\u5802\u7eaa\u5f8b\uff0c\u56e0\u6b64\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\u3002", "Id": "Input3", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4e8b\u4ef6"}, {"Boolean": False, "Context": "\u9648\u70af\u57ce-\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b$$\u9648\u535a\u9716-\u4e0e\u9648\u70af\u57ce\u4ea4\u8c08$$\u6570\u5b66\u8001\u5e08-\u7ef4\u6301\u8bfe\u5802\u79e9\u5e8f\u5e76\u5904\u7f5a\u9648\u70af\u57ce", "Id": "Input4", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4eba\u7269-\u4e8b\u4ef6"}, {"Boolean": False, "Context": "", "Id": "Input5", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u6263\u5206\u7edf\u8ba1"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.01215211504951631, 0.375], [0.01215211504951631, 0.5], [0.01215211504951631, 0.625], [0.01215211504951631, 0.75], [0.01215211504951631, 0.875], [0.02025352508252718, 0.0625]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "32d94c5e26e98e859c92e405d64030e0fecc0bcb5de76e646b7281088777be32", "height": 100, "id": "addExcel1718176391502", "inputStatus": [False, False, False, False, False], "isFinish": False, "label": "\u6dfb\u52a0\u4e8b\u4ef61", "max_tokens": 512, "name": "addExcel", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 493.7412109375, "x": 1828.5126175812557, "y": 806.8651421324282}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u9648\u70af\u57ce\u5728\u8bfe\u5802\u4e0a\u4e00\u76f4\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u4e86\u8bfe\u5802\u7eaa\u5f8b\uff0c\u56e0\u6b64\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\u3002", "Id": "Input1", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u4e8b\u4ef6"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Context": "", "Id": "Output11", "Kind": "String", "Link": 1, "Num": 0, "name": "\u8fdd\u53cd\u73ed\u89c4", "Boolean": False}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 0, "anchorPoints": [[0.03409090909090909, 0.75], [0.9602272727272727, 0.75], [0.056818181818181816, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "7d9d1826c576fa4156cde212d6cb8e3f0152525351b053c4ce20e061e0f0dcd2", "height": 20, "id": "GradeBaidu1718178913018", "inputStatus": [False], "isFinish": False, "label": "appbuider-\u73ed\u7ea7\u6263\u52061", "max_tokens": 512, "name": "GradeBaidu", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 176, "x": 1156.2708239705407, "y": 946.7327189673744}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"\u4fee\u6539\u540e\u7684\u539f\u8bdd\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u804c\u8d23\u662f\u4e00\u540d\u82b1\u540d\u518c\u6821\u5bf9\u5458\uff0c\u4f60\u9700\u8981\u6309\u7167\u82b1\u540d\u518c\uff0c\u6821\u5bf9\u539f\u8bdd\uff0c\u539f\u8bdd\u4e2d\u7684\u540d\u5b57\u53ef\u80fd\u542b\u6709\u8c10\u97f3\uff0c\u4f60\u9700\u8981\u8fdb\u884c\u66ff\u6362\u3002\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u82b1\u540d\u518c\u4e0a\u7684\u540d\u5b57\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u539f\u8bdd\u3002\n  \u8fd9\u662f\u82b1\u540d\u518c: [\n    \"\u9648\u5b50\u6dc7\", \"\u9648\u4fca\u6797\", \"\u9648\u745e\u6d69\", \"\u9648\u70ef\u7075\", \"\u9648\u96c5\u6dc7\", \"\u9648\u4fca\u9633\", \"\u9648\u6069\u5e0c\", \"\u9648\u9526\u6dee\", \"\u9648\u4f1f\u7965\", \"\u9648\u6893\u8c6a\",\n    \"\u9648\u70dc\u70c1\", \"\u9648\u6cd3\u6977\", \"\u9648\u5b87\u7fd4\", \"\u9648\u70af\u57ce\", \"\u9648\u5999\u73b2\", \"\u9648\u4fca\u751f\", \"\u9648\u9a8f\u66dc\", \"\u9648\u4e50\u771f\", \"\u9648\u6f2b\u6db5\", \"\u9648\u65af\u67d4\",\n    \"\u9648\u4f73\u4eea\", \"\u9648\u6cfd\u6ee8\", \"\u9648\u51ef\u6148\", \"\u9648\u7119\u7131\", \"\u9648\u5b9a\u6fe0\", \"\u9648\u9510\u6b23\", \"\u9648\u9510\u626c\", \"\u9648\u4f73\u7eaf\", \"\u9648\u6cfd\u9534\", \"\u9648\u6d69\u8bfa\",\n\n    \"\u9648\u535a\u9716\", \"\u9648\u777f\u749f\", \"\u9648\u5b9d\u541b\", \"\u9648\u4eea\", \"\u9648\u6b23\u6021\", \"\u9648\u94e0\u8f69\", \"\u9648\u4f73\u59ae\", \"\u9648\u9038\u6b22\", \"\u9648\u7814\u60e0\", \"\u9648\u8d8a\u5f6c\",\n    \"\u9648\u6797\u5a1c\", \"\u9648\u6587\u654f\", \"\u5434\u53ef\u598d\", \"\u9648\u5efa\u660e\"\n  ],\n  \"\u539f\u8bdd\": \"\u56e0\u4e3a\u4ed6\u4e00\u76f4\u5728\u8ddf\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u70af\u57ce\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\",\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"\u4fee\u6539\u540e\u7684\u539f\u8bdd\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u535a\u9716\u770b\u5230\u5176\u4ed6\u540c\u5b66\u5728\u5272\u624b\uff0c\u89c9\u5f97\u597d\u73a9\uff0c\u5c31\u8ba9\u4fca\u9633\u4e00\u8d77\u73a9\uff0c\u4f46\u5b87\u7fd4\u548c\u6d69\u8bfa\u5bf9\u4e8e\u5a01\u80c1\u5e76\u4e0d\u77e5\u60c5", "Id": "Input11718289525763", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "input1"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": True, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "\u4fee\u6539\u540e\u7684\u539f\u8bdd", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u539f\u8bdd"}], "ReTryNum": 0, "Top_p": 0.75, "TriggerLink": 1, "anchorPoints": [[0.03528600964851826, 0.75], [0.9588329887433954, 0.75], [0.058810016080863774, 0.125]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ee4c452c59981e35b77d21b21e7d70ff5d4d7ba34dcc714b5d46f52084848025", "height": 20, "id": "Gpt-4o1718289488691", "inputStatus": [True, None, False], "isFinish": False, "label": "\u82b1\u540d\u518c", "max_tokens": 2836, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u804c\u8d23\u662f\u4e00\u540d\u82b1\u540d\u518c\u6821\u5bf9\u5458\uff0c\u4f60\u9700\u8981\u6309\u7167\u82b1\u540d\u518c\uff0c\u6821\u5bf9\u539f\u8bdd\uff0c\u539f\u8bdd\u4e2d\u7684\u540d\u5b57\u53ef\u80fd\u542b\u6709\u8c10\u97f3\uff0c\u4f60\u9700\u8981\u8fdb\u884c\u66ff\u6362\u3002\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u82b1\u540d\u518c\u4e0a\u7684\u540d\u5b57\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u539f\u8bdd\u3002\n  \u8fd9\u662f\u82b1\u540d\u518c: [\n    \"\u9648\u5b50\u6dc7\", \"\u9648\u4fca\u6797\", \"\u9648\u745e\u6d69\", \"\u9648\u70ef\u7075\", \"\u9648\u96c5\u6dc7\", \"\u9648\u4fca\u9633\", \"\u9648\u6069\u5e0c\", \"\u9648\u9526\u6dee\", \"\u9648\u4f1f\u7965\", \"\u9648\u6893\u8c6a\",\n    \"\u9648\u70dc\u70c1\", \"\u9648\u6cd3\u6977\", \"\u9648\u5b87\u7fd4\", \"\u9648\u70af\u57ce\", \"\u9648\u5999\u73b2\", \"\u9648\u4fca\u751f\", \"\u9648\u9a8f\u66dc\", \"\u9648\u4e50\u771f\", \"\u9648\u6f2b\u6db5\", \"\u9648\u65af\u67d4\",\n    \"\u9648\u4f73\u4eea\", \"\u9648\u6cfd\u6ee8\", \"\u9648\u51ef\u6148\", \"\u9648\u7119\u7131\", \"\u9648\u5b9a\u6fe0\", \"\u9648\u9510\u6b23\", \"\u9648\u9510\u626c\", \"\u9648\u4f73\u7eaf\", \"\u9648\u6cfd\u9534\", \"\u9648\u6d69\u8bfa\",\n\n    \"\u9648\u535a\u9716\", \"\u9648\u777f\u749f\", \"\u9648\u5b9d\u541b\", \"\u9648\u4eea\", \"\u9648\u6b23\u6021\", \"\u9648\u94e0\u8f69\", \"\u9648\u4f73\u59ae\", \"\u9648\u9038\u6b22\", \"\u9648\u7814\u60e0\", \"\u9648\u8d8a\u5f6c\",\n    \"\u9648\u6797\u5a1c\", \"\u9648\u6587\u654f\", \"\u5434\u53ef\u598d\", \"\u9648\u5efa\u660e\"\n  ],\n  \"\u539f\u8bdd\": \"{{input1}}\",", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.1, "type": "fileNode", "width": 170.0390625, "x": -192.95464908929944, "y": 76.44412372315207}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"name1%%+1&&name2%%-1\" (you need output type: String)\n\"Output21719128338297\": \"\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u6263\u5206\u4e0e\u52a0\u5206\u60c5\u51b5\uff0c\u6ca1\u6709\u6263\u5206\u5c31\u56de\u7b54\u65e0\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u540d\u73ed\u89c4\u5c0f\u52a9\u624b\uff0c\u4f60\u6839\u636e\u73ed\u89c4\u6765\u8fdb\u884c\u6263\u5206\u52a0\u51cf\u3002\n\u8fd9\u662f\u73ed\u89c4\uff1a\n\u4e00\u3001\u52a0\u5206\u9879\n1. \u4e0a\u8bfe\u4e3e\u624b\u53d1\u8a00\u4e14\u56de\u7b54\u6b63\u786e\uff0c\u52a01\u5206\u3002\n2. \u4f5c\u4e1a\u5b8c\u6210\u8ba4\u771f\uff08\u6709\u8d34\u7eb8\u7684\uff09\uff0c\u4f53\u73b0\u4e3a\u5b57\u8ff9\u5de5\u6574\uff0c\u53ca\u65f6\u4fee\u6539\u7b49\uff0c\u6bcf\u4e2a\u8d34\u7eb8\u52a01\u5206\u3002\n3. \u8bfe\u4e0b\u79ef\u6781\u63d0\u95ee\uff0c\u6bcf\u6b21\u52a01\u5206\u3002\uff08\u7531\u8001\u5e08\u5224\u65ad\u63d0\u95ee\u7684\u8d28\u91cf\u914c\u60c5\u52a0\u5206\uff09\n4. \u6bcf\u4e00\u8282\u8bfe\u6311\u9009\u4e00\u4f4d\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u52a05\u5206\uff08\u5c3d\u91cf\u4e00\u5468\u5185\u4e0d\u91cd\u590d\uff09\uff08\u5982\u679c\u6ca1\u6709\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u5219\u4e0d\u52a0\uff09\u3002\n\n\u4e8c\u3001\u6263\u5206\u9879\n5. \u9884\u5907\u94c3\u54cd\u4e86\u4e4b\u540e\u8fd8\u5728\u5b09\u620f\u6253\u95f9\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n6. \u6ca1\u6709\u8ba4\u771f\u8fdb\u884c\u8bfe\u524d\u8bfb\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n7. \u4e0a\u8bfe\u5f00\u5c0f\u5dee\u88ab\u8001\u5e08\u6279\u8bc4\u7684\uff0c\u62631\u5206\u3002\n8. \u4f5c\u4e1a\u6ca1\u5199\u62632\u5206\u3001\u5199\u6b20\u62631\u5206\uff0c\u5fd8\u8bb0\u5e26\u62631\u5206\u3002\n9. \u8bfe\u524d\u51c6\u5907\u4e0d\u5230\u4f4d\uff08\u6ca1\u6709\u5e26\u4e66\u7b49\uff09\u62631\u5206\u3002\n10. \u8bfe\u5802\u4e0a\u88ab\u63d0\u95ee\u4f46\u56de\u7b54\u9519\u8bef\u62631\u5206\u3002\n\n\u8fd9\u662f\u73ed\u7ea7\u4e8b\u4ef6\uff1a\n\u65f6\u95f4\uff1a2024\u5e746\u6708\n30\u65e5\n\u5b66\u751f\u59d3\u540d\uff1a\u9648\u70af\u57ce\n\u4e8b\u4ef6\uff1a\u5728\u8bfe\u5802\u4e0a\u4e00\u76f4\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u4e86\u8bfe\u5802\u7eaa\u5f8b\uff0c\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u73ed\u89c4\u5173\u8054\uff1a\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u73ed\u89c4\n\n\u8fd9\u662f\u8981\u6c42\uff1a\n\u8bf7\u786e\u4fdd\u4e0d\u8981\u6839\u636e\u73ed\u89c4\u4ee5\u5916\u7684\u4e8b\u4ef6\u8fdb\u884c\u6263\u5206\u6216\u52a0\u5206\u3002\n\u6211\u9700\u8981\u7684\u683c\u5f0f\u662f\u59d3\u540d1%%+1&&\u59d3\u540d2%%-1\u3002\u603b\u4e4b\u5c31\u662f\u59d3\u540d%%\u6263\u52a0\u5206\u503c \u7528&&\u8fdb\u884c\u533a\u5206\u3002\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"name1%%+1&&name2%%-1\" (you need output type: String)\n\"Output21719128338297\": \"\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u6263\u5206\u4e0e\u52a0\u5206\u60c5\u51b5\uff0c\u6ca1\u6709\u6263\u5206\u5c31\u56de\u7b54\u65e0\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u65f6\u95f4\uff1a2024\u5e746\u6708\n30\u65e5\n\u5b66\u751f\u59d3\u540d\uff1a\u9648\u70af\u57ce\n\u4e8b\u4ef6\uff1a\u5728\u8bfe\u5802\u4e0a\u4e00\u76f4\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u4e86\u8bfe\u5802\u7eaa\u5f8b\uff0c\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u73ed\u89c4\u5173\u8054\uff1a\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u73ed\u89c4", "Id": "Input11718026283102", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u8fdd\u53cd\u73ed\u89c4"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "name1%%+1&&name2%%-1", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u6263\u5206"}, {"Boolean": False, "Context": "", "Description": "\u7528\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u6263\u5206\u4e0e\u52a0\u5206\u60c5\u51b5\uff0c\u6ca1\u6709\u6263\u5206\u5c31\u56de\u7b54\u65e0", "Id": "Output21719128338297", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u6263\u5206\u60c5\u51b5"}], "ReTryNum": 0, "Top_p": 0.75, "TriggerLink": 0, "anchorPoints": [[0.033333514179221896, 0.6], [0.9611109001242412, 0.6], [0.9611109001242412, 0.8], [0.05555585696536982, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ee4c452c59981e35b77d21b21e7d70ff5d4d7ba34dcc714b5d46f52084848025", "height": 40, "id": "wenxin-4.py1719129937000", "inputStatus": [False], "isFinish": False, "label": "\u6263\u5206\u7edf\u8ba12", "max_tokens": 512, "name": "wenxin-4.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u89d2\u8272\u662f\u4e00\u540d\u73ed\u89c4\u5c0f\u52a9\u624b\uff0c\u4f60\u6839\u636e\u73ed\u89c4\u6765\u8fdb\u884c\u6263\u5206\u52a0\u51cf\u3002\n\u8fd9\u662f\u73ed\u89c4\uff1a\n\u4e00\u3001\u52a0\u5206\u9879\n1. \u4e0a\u8bfe\u4e3e\u624b\u53d1\u8a00\u4e14\u56de\u7b54\u6b63\u786e\uff0c\u52a01\u5206\u3002\n2. \u4f5c\u4e1a\u5b8c\u6210\u8ba4\u771f\uff08\u6709\u8d34\u7eb8\u7684\uff09\uff0c\u4f53\u73b0\u4e3a\u5b57\u8ff9\u5de5\u6574\uff0c\u53ca\u65f6\u4fee\u6539\u7b49\uff0c\u6bcf\u4e2a\u8d34\u7eb8\u52a01\u5206\u3002\n3. \u8bfe\u4e0b\u79ef\u6781\u63d0\u95ee\uff0c\u6bcf\u6b21\u52a01\u5206\u3002\uff08\u7531\u8001\u5e08\u5224\u65ad\u63d0\u95ee\u7684\u8d28\u91cf\u914c\u60c5\u52a0\u5206\uff09\n4. \u6bcf\u4e00\u8282\u8bfe\u6311\u9009\u4e00\u4f4d\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u52a05\u5206\uff08\u5c3d\u91cf\u4e00\u5468\u5185\u4e0d\u91cd\u590d\uff09\uff08\u5982\u679c\u6ca1\u6709\u8868\u73b0\u4f18\u79c0\u7684\u540c\u5b66\u5219\u4e0d\u52a0\uff09\u3002\n\n\u4e8c\u3001\u6263\u5206\u9879\n5. \u9884\u5907\u94c3\u54cd\u4e86\u4e4b\u540e\u8fd8\u5728\u5b09\u620f\u6253\u95f9\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n6. \u6ca1\u6709\u8ba4\u771f\u8fdb\u884c\u8bfe\u524d\u8bfb\uff08\u8bfe\u4ee3\u8868\u8fdb\u884c\u6263\u5206\u548c\u8b66\u544a\uff09\uff0c\u62631\u5206\u3002\n7. \u4e0a\u8bfe\u5f00\u5c0f\u5dee\u88ab\u8001\u5e08\u6279\u8bc4\u7684\uff0c\u62631\u5206\u3002\n8. \u4f5c\u4e1a\u6ca1\u5199\u62632\u5206\u3001\u5199\u6b20\u62631\u5206\uff0c\u5fd8\u8bb0\u5e26\u62631\u5206\u3002\n9. \u8bfe\u524d\u51c6\u5907\u4e0d\u5230\u4f4d\uff08\u6ca1\u6709\u5e26\u4e66\u7b49\uff09\u62631\u5206\u3002\n10. \u8bfe\u5802\u4e0a\u88ab\u63d0\u95ee\u4f46\u56de\u7b54\u9519\u8bef\u62631\u5206\u3002\n\n\u8fd9\u662f\u73ed\u7ea7\u4e8b\u4ef6\uff1a\n{{\u8fdd\u53cd\u73ed\u89c4}}\n\n\u8fd9\u662f\u8981\u6c42\uff1a\n\u8bf7\u786e\u4fdd\u4e0d\u8981\u6839\u636e\u73ed\u89c4\u4ee5\u5916\u7684\u4e8b\u4ef6\u8fdb\u884c\u6263\u5206\u6216\u52a0\u5206\u3002\n\u6211\u9700\u8981\u7684\u683c\u5f0f\u662f\u59d3\u540d1%%+1&&\u59d3\u540d2%%-1\u3002\u603b\u4e4b\u5c31\u662f\u59d3\u540d%%\u6263\u52a0\u5206\u503c \u7528&&\u8fdb\u884c\u533a\u5206\u3002\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 179.9990234375, "x": 1460.3453162596406, "y": 947.3211315794632}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output1\": \"\u4e8b\u4ef6\u62a5\u544a\u4e0e\u6263\u52a0\u5206\u60c5\u51b5\" (you need output type: String)\n}\n", "ExprotPrompt": "\u4f60\u7684\u804c\u8d23\u662f\u4e00\u4f4d\u73ed\u7ea7\u4e8b\u4ef6\u62a5\u544a\u5458\uff0c\u4f60\u8981\u5411\u73ed\u4e3b\u4efb\u6c47\u62a5\u73ed\u7ea7\u4e8b\u4ef6\u3002\u4ee5\u4e0b\u662f\u4e8b\u4ef6\u9648\u8ff0\u548c\u6263\u52a0\u5206\u60c5\u51b5\u3002\u4f60\u7684\u4efb\u52a1\u751f\u6210\u4e00\u4efd\u4e8b\u4ef6\u62a5\u544a\u4e0e\u6263\u52a0\u5206\u60c5\u51b5\uff0c\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002\n  \u8fd9\u662f\u4e8b\u4ef6\u9648\u8ff0: \"\u2661\u2661\u2661\u5b8c\u6574\u4e8b\u4ef6\u62a5\u544a\n\n\u4e00\u3001\u4eba\u7269\n\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\n2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\n\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u56db\u3001\u4f60\u597d\u5c0f\u670b\u53cb\uff0c\u611f\u8c22\u4f60\u63d0\u4f9b\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u6216\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002\",\n  \u8fd9\u662f\u6263\u52a0\u5206\u60c5\u51b5: \"\u65e0\"\nPlease ensure the output is in JSON format\n{\n\"Output1\": \"\u4e8b\u4ef6\u62a5\u544a\u4e0e\u6263\u52a0\u5206\u60c5\u51b5\" (you need output type: String)\n}\n", "Inputs": [{"Context": "\u2661\u2661\u2661\u5b8c\u6574\u4e8b\u4ef6\u62a5\u544a\n\n\u4e00\u3001\u4eba\u7269\n\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\n2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\n\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\u56db\u3001\u4f60\u597d\u5c0f\u670b\u53cb\uff0c\u611f\u8c22\u4f60\u63d0\u4f9b\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u6216\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002", "Id": "Input11715761406972", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": None, "isConnected": False, "name": "\u539f\u6587"}, {"Boolean": False, "Context": "\u65e0", "Id": "Input21717385554197", "IsLabel": False, "Isnecessary": False, "Kind": "String", "Link": 1, "Num": 0, "isConnected": False, "name": "\u6263\u5206"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": False, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "LLm", "Outputs": [{"Boolean": False, "Context": "", "Description": "\u4e8b\u4ef6\u62a5\u544a\u4e0e\u6263\u52a0\u5206\u60c5\u51b5", "Id": "Output1", "Kind": "String", "Link": 1, "Num": 0, "name": "\u4e8b\u4ef6\u62a5\u544a"}], "ReTryNum": 1, "Top_p": 0.75, "TriggerLink": 0, "anchorPoints": [[0.03409090909090909, 0.6], [0.03409090909090909, 0.8], [0.9602272727272727, 0.6], [0.056818181818181816, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0.5, "hash": "ed5cc43e09e507e977545825bd62844ffa0c99afd45ba9b592a010239d373a1a", "height": 40, "id": "wenxin-4.py1719129959883", "inputStatus": [False, False], "isFinish": False, "label": "\u73ed\u7ea7\u60c5\u51b5", "max_tokens": 512, "name": "wenxin-3.py", "presence_penalty": 0.5, "prompt": "\u4f60\u7684\u804c\u8d23\u662f\u4e00\u4f4d\u73ed\u7ea7\u4e8b\u4ef6\u62a5\u544a\u5458\uff0c\u4f60\u8981\u5411\u73ed\u4e3b\u4efb\u6c47\u62a5\u73ed\u7ea7\u4e8b\u4ef6\u3002\u4ee5\u4e0b\u662f\u4e8b\u4ef6\u9648\u8ff0\u548c\u6263\u52a0\u5206\u60c5\u51b5\u3002\u4f60\u7684\u4efb\u52a1\u751f\u6210\u4e00\u4efd\u4e8b\u4ef6\u62a5\u544a\u4e0e\u6263\u52a0\u5206\u60c5\u51b5\uff0c\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u3002\n  \u8fd9\u662f\u4e8b\u4ef6\u9648\u8ff0: \"{{\u539f\u6587}}\",\n  \u8fd9\u662f\u6263\u52a0\u5206\u60c5\u51b5: \"{{\u6263\u5206}}\"", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "temperature": 0.2, "type": "fileNode", "width": 176, "x": 1832.070493654685, "y": 1001.3440616883556}, {"ErrorContext": "", "ExprotAfterPrompt": "Please ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "ExprotPrompt": "\nPlease ensure the output is in JSON format\n{\n\"Output11\": \"undefined\" (you need output type: String)\n}\n", "Inputs": [{"Boolean": False, "Context": "\u4e8b\u4ef6\u62a5\u544a\uff1a\n\n\u4e00\u3001\u4eba\u7269\uff1a\u9648\u70af\u57ce\n\u4e8c\u3001\u65f6\u95f4\uff1a2024\u5e746\u670814\u65e5\n\u4e09\u3001\u4e8b\u4ef6\u7b80\u5355\u7ecf\u8fc7\uff1a\u56e0\u4e3a\u9648\u70af\u57ce\u4e00\u76f4\u5728\u8ddf\u9648\u535a\u9716\u8bf4\u8bdd\uff0c\u6270\u4e71\u8bfe\u5802\u7eaa\u5f8b\uff0c\u6240\u4ee5\u88ab\u6570\u5b66\u8001\u5e08\u7f5a\u7ad9\n\n\u6263\u52a0\u5206\u60c5\u51b5\uff1a\u65e0", "Id": "Input1", "IsLabel": False, "Isnecessary": True, "Kind": "String", "Link": 1, "Num": 0, "name": "\u539f\u6587"}, {"Context": "zoro", "Id": "Input2", "IsLabel": True, "Isnecessary": True, "Kind": "String", "Link": 0, "Num": None, "name": "\u540d\u5b57"}], "IsBlock": False, "IsError": False, "IsHovor": False, "IsRunning": False, "IsStartNode": False, "IsTrigger": True, "Lable": [{"Id": "Label1", "Kind": "None"}], "NodeKind": "Normal", "Outputs": [{"Boolean": False, "Context": "", "Id": "Output11", "Kind": "String", "Link": 0, "Num": 0, "name": "OutPut1"}], "ReTryNum": 0, "Top_p": 0.9, "TriggerLink": 1, "anchorPoints": [[0.03200733501427411, 0.6], [0.03200733501427411, 0.8], [0.9626581091500136, 0.6], [0.053345558357123506, 0.1]], "depth": 0, "draggable": False, "firstRun": True, "frequency_penalty": 0, "hash": "76eaacccda7dc9dbe9323746a24a653c400c2409013fad05ecc6022cac55a250", "height": 40, "id": "SendMessage1719130039551", "inputStatus": [False, False, None, False], "isFinish": False, "label": "\u6559\u5e08\u53cd\u9988", "max_tokens": 512, "name": "SendMessage", "presence_penalty": 0, "prompt": "", "style": {"hover": {"fill": "lightgreen"}, "active": {"lineWidth": 100, "stroke": "#ff0000"}}, "type": "fileNode", "width": 187.45703125, "x": 2201.538247895815, "y": 1094.9950888245355}]
edges = [{"curveOffset": 20, "depth": 0, "endPoint": {"x": 251.99545350625627, "y": -124.5210943453742, "anchorIndex": 0}, "id": "edge-0.01688366202659731715847206425", "minCurveOffset": 10, "source": "Gpt.py1715846651879", "sourceAnchor": 1, "sourceAnchorID": "Output21715846670348", "startPoint": {"x": 133.0332518018509, "y": -94.94747751867064, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "IfNode.py1715847195096", "targetAnchor": 0, "targetAnchorID": "Input11715847198574", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 800.8774255780359, "y": 67.87912554942379, "anchorIndex": 5}, "id": "edge-0.35820897678713481716518514101", "minCurveOffset": 10, "source": "IfNode.py1715847195096", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": 415.9215898698926, "y": -124.5210943453742, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt.py1716518404189", "targetAnchor": 5, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -2.8539288118233888, "y": -145.57247751867064, "anchorIndex": 2}, "id": "edge-0.88138292505150331717055981034", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -419.6341021847623, "y": 98.00470626090211, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt.py1715846651879", "targetAnchor": 2, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -559.5475987569838, "y": 98.00470626090211, "anchorIndex": 0}, "id": "edge-0.2488579145779911717056114093", "minCurveOffset": 10, "source": "WeChatTrigger1717056060217", "sourceAnchor": 0, "sourceAnchorID": "Output1", "startPoint": {"x": -802.9772622416654, "y": 220.7700198140528, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "IfNode1717055917650", "targetAnchor": 0, "targetAnchorID": "Input11717055921441", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 2174.0515755217966, "y": 249.18233187377984, "anchorIndex": 1}, "id": "edge-0.74675557647109911717056146827", "minCurveOffset": 10, "source": "WeChatTrigger1717056060217", "sourceAnchor": 0, "sourceAnchorID": "Output1", "startPoint": {"x": -802.9772622416654, "y": 220.7700198140528, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1716534692184", "targetAnchor": 1, "targetAnchorID": "Input2", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -62.85111761718727, "y": 367.9138112430215, "anchorIndex": 2}, "id": "edge-0.77692835628245781717060264198", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 2, "sourceAnchorID": "Output21717055988191", "startPoint": {"x": -419.6341021847623, "y": 118.20470626090213, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendBaidu1717060261608", "targetAnchor": 2, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 787.8644651725541, "y": 570.0645513069392, "anchorIndex": 0}, "id": "edge-0.95032616128171421717060299102", "minCurveOffset": 10, "source": "SendBaidu1717060261608", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 111.0594086986022, "y": 418.5388112430215, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1717060272229", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 787.8644651725541, "y": 590.2645513069392, "anchorIndex": 1}, "id": "edge-0.5784336744996311717060320641", "minCurveOffset": 10, "source": "WeChatTrigger1717056060217", "sourceAnchor": 0, "sourceAnchorID": "Output1", "startPoint": {"x": -802.9772622416654, "y": 220.7700198140528, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1717060272229", "targetAnchor": 1, "targetAnchorID": "Input2", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 385.08284250241456, "y": 709.1206328642319, "anchorIndex": 0}, "id": "edge-0.9884945872788741717060743549", "minCurveOffset": 10, "source": "SendBaidu1717060261608", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 111.0594086986022, "y": 418.5388112430215, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "IfNode1717060626039", "targetAnchor": 0, "targetAnchorID": "Input11717060684723", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 790.5918916608041, "y": 336.58253501329403, "anchorIndex": 1}, "id": "edge-0.242601466777206951717383998673", "minCurveOffset": 10, "source": "QueryTime1717383971815", "sourceAnchor": 0, "sourceAnchorID": "Output11", "startPoint": {"x": 553.9466374919864, "y": 474.46012137022024, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-35-turbo1717056207234", "targetAnchor": 1, "targetAnchorID": "Input21717383985526", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1847.6423053375242, "y": 360.93717423194636, "anchorIndex": 1}, "id": "edge-0.135115738978539121717384461761", "minCurveOffset": 10, "source": "WeChatTrigger1717056060217", "sourceAnchor": 0, "sourceAnchorID": "Output1", "startPoint": {"x": -802.9772622416654, "y": 220.7700198140528, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1715761489952", "targetAnchor": 1, "targetAnchorID": "Input2", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 794.6141140035902, "y": 265.88253501329405, "anchorIndex": 4}, "id": "edge-0.58782657257309361717385037752", "minCurveOffset": 10, "source": "IfNode.py1715847195096", "sourceAnchor": 2, "sourceAnchorID": "Output21716276533660", "startPoint": {"x": 415.9215898698926, "y": -104.32109434537418, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-35-turbo1717056207234", "targetAnchor": 4, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 796.8554609916414, "y": 138.46245888275712, "anchorIndex": 1}, "id": "edge-0.49435120092340391717385573145", "minCurveOffset": 10, "source": "QueryTime1717383971815", "sourceAnchor": 0, "sourceAnchorID": "Output11", "startPoint": {"x": 553.9466374919864, "y": 474.46012137022024, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt.py1716518404189", "targetAnchor": 1, "targetAnchorID": "Input21717385554197", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 793.0771190871566, "y": 722.3835733882029, "anchorIndex": 2}, "id": "edge-0.65437204338003551717490559515", "minCurveOffset": 10, "source": "IfNode1717060626039", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": 567.0148552933161, "y": 709.1206328642319, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "RefreshBaidu1717061708619", "targetAnchor": 2, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 794.3647814576539, "y": 889.0244712018831, "anchorIndex": 0}, "id": "edge-0.30565557386539431717490796075", "minCurveOffset": 10, "source": "SendBaidu1717060261608", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 111.0594086986022, "y": 418.5388112430215, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-35-turbo.py1717490780107", "targetAnchor": 0, "targetAnchorID": "Input11715761406972", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 798.3867460440483, "y": 838.6078045352165, "anchorIndex": 5}, "id": "edge-0.14273542843764521717490798746", "minCurveOffset": 10, "source": "IfNode1717060626039", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": 567.0148552933161, "y": 709.1206328642319, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-35-turbo.py1717490780107", "targetAnchor": 5, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 794.3647814576539, "y": 909.1911378685497, "anchorIndex": 1}, "id": "edge-0.97630412287636381717490801073", "minCurveOffset": 10, "source": "QueryTime1717383971815", "sourceAnchor": 0, "sourceAnchorID": "Output11", "startPoint": {"x": 553.9466374919864, "y": 474.46012137022024, "anchorIndex": 0}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-35-turbo.py1717490780107", "targetAnchor": 1, "targetAnchorID": "Input21717385554197", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 2174.0515755217966, "y": 228.98233187377983, "anchorIndex": 0}, "id": "edge-0.86263487384629771717676795337", "minCurveOffset": 10, "source": "SendBaiduConclusion1717676780161", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 2015.3998489793034, "y": 454.4693070872924, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1716534692184", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1078.2611684686992, "y": 433.05481982007404, "anchorIndex": 1}, "id": "edge-0.56253604624899411717761915605", "minCurveOffset": 10, "source": "Gpt-35-turbo1717056207234", "sourceAnchor": 2, "sourceAnchorID": "Output1", "startPoint": {"x": 958.5186924842491, "y": 316.38253501329405, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "QueryExcel1717761887164", "targetAnchor": 1, "targetAnchorID": "Input2", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1078.2611684686992, "y": 453.2214864867408, "anchorIndex": 2}, "id": "edge-0.73670103534361411717761924410", "minCurveOffset": 10, "source": "Gpt-35-turbo1717056207234", "sourceAnchor": 3, "sourceAnchorID": "Output21717395951252", "startPoint": {"x": 958.5186924842491, "y": 336.58253501329403, "anchorIndex": 3}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "QueryExcel1717761887164", "targetAnchor": 2, "targetAnchorID": "Input3", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1847.4730481558584, "y": 454.4693070872924, "anchorIndex": 0}, "id": "edge-0.79105894657170621717761949834", "minCurveOffset": 10, "source": "QueryExcel1717761887164", "sourceAnchor": 3, "sourceAnchorID": "Output11", "startPoint": {"x": 1559.976049823592, "y": 412.8881531534074, "anchorIndex": 3}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendBaiduConclusion1717676780161", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1286.1122463191757, "y": -92.17151461780284, "anchorIndex": 0}, "id": "edge-0.55237487586951331718026288647", "minCurveOffset": 10, "source": "GradeBaidu1718026137971", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 1205.6314224982857, "y": -123.82799802245356, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-4o1718026278679", "targetAnchor": 0, "targetAnchorID": "Input11718026283102", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1856.878102427502, "y": -90.10973936899848, "anchorIndex": 1}, "id": "edge-0.85516360991990311718027516628", "minCurveOffset": 10, "source": "Gpt.py1716518404189", "sourceAnchor": 2, "sourceAnchorID": "Output1", "startPoint": {"x": 966.8954042108596, "y": 118.29579221609046, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718027435697", "targetAnchor": 1, "targetAnchorID": "Input2", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1856.878102427502, "y": -69.98473936899848, "anchorIndex": 2}, "id": "edge-0.88097409082036961718027519787", "minCurveOffset": 10, "source": "Gpt.py1716518404189", "sourceAnchor": 3, "sourceAnchorID": "Output21715761424540", "startPoint": {"x": 966.8954042108596, "y": 138.46245888275712, "anchorIndex": 3}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718027435697", "targetAnchor": 2, "targetAnchorID": "Input3", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1856.878102427502, "y": -49.859739368998476, "anchorIndex": 3}, "id": "edge-0.342865994515771271718027522197", "minCurveOffset": 10, "source": "Gpt.py1716518404189", "sourceAnchor": 4, "sourceAnchorID": "Output41717426415626", "startPoint": {"x": 966.8954042108596, "y": 158.6291255494238, "anchorIndex": 4}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718027435697", "targetAnchor": 3, "targetAnchorID": "Input4", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1856.878102427502, "y": -29.734739368998476, "anchorIndex": 4}, "id": "edge-0.055719938133549361718027525592", "minCurveOffset": 10, "source": "Gpt-4o1718026278679", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": 1454.0390471426208, "y": -92.17151461780284, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718027435697", "targetAnchor": 4, "targetAnchorID": "Input5", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1834.0247696963052, "y": 886.8651421324282, "anchorIndex": 1}, "id": "edge-0.49470065658887051718176403472", "minCurveOffset": 10, "source": "Gpt-35-turbo.py1717490780107", "sourceAnchor": 2, "sourceAnchorID": "Output1", "startPoint": {"x": 964.4047246768721, "y": 889.0244712018831, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718176391502", "targetAnchor": 1, "targetAnchorID": "Input2", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1834.0247696963052, "y": 906.9901421324282, "anchorIndex": 2}, "id": "edge-0.0605025431012093941718176405695", "minCurveOffset": 10, "source": "Gpt-35-turbo.py1717490780107", "sourceAnchor": 3, "sourceAnchorID": "Output21715761424540", "startPoint": {"x": 964.4047246768721, "y": 909.1911378685497, "anchorIndex": 3}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718176391502", "targetAnchor": 2, "targetAnchorID": "Input3", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1834.0247696963052, "y": 927.1151421324282, "anchorIndex": 3}, "id": "edge-0.94828623677938181718176408584", "minCurveOffset": 10, "source": "Gpt-35-turbo.py1717490780107", "sourceAnchor": 4, "sourceAnchorID": "Output41717426415626", "startPoint": {"x": 964.4047246768721, "y": 929.3578045352165, "anchorIndex": 4}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718176391502", "targetAnchor": 3, "targetAnchorID": "Input4", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1041.7052861346494, "y": -123.82799802245356, "anchorIndex": 0}, "id": "edge-0.77197215854340541718176580115", "minCurveOffset": 10, "source": "Gpt.py1716518404189", "sourceAnchor": 3, "sourceAnchorID": "Output21715761424540", "startPoint": {"x": 966.8954042108596, "y": 138.46245888275712, "anchorIndex": 3}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "GradeBaidu1718026137971", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1161.8049148796317, "y": 1006.9827189673742, "anchorIndex": 0}, "id": "edge-0.148343753949304661718178933092", "minCurveOffset": 10, "source": "Gpt-35-turbo.py1717490780107", "sourceAnchor": 3, "sourceAnchorID": "Output21715761424540", "startPoint": {"x": 964.4047246768721, "y": 909.1911378685497, "anchorIndex": 3}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "GradeBaidu1718178913018", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -187.4193630796509, "y": 136.69412372315207, "anchorIndex": 0}, "id": "edge-0.058800902438951311718290067131", "minCurveOffset": 10, "source": "WeChatTrigger1717056060217", "sourceAnchor": 1, "sourceAnchorID": "Output2", "startPoint": {"x": -802.9772622416654, "y": 240.97001981405282, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-4o1718289488691", "targetAnchor": 0, "targetAnchorID": "Input11718289525763", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -6.8802447703706155, "y": -94.94747751867064, "anchorIndex": 0}, "id": "edge-0.80559122881873371718290070132", "minCurveOffset": 10, "source": "Gpt-4o1718289488691", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -29.456753600556027, "y": 136.69412372315207, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt.py1715846651879", "targetAnchor": 0, "targetAnchorID": "Input11715846657903", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -66.87217024876622, "y": 418.5388112430215, "anchorIndex": 0}, "id": "edge-0.065825560099657121718290074757", "minCurveOffset": 10, "source": "Gpt-4o1718289488691", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -29.456753600556027, "y": 136.69412372315207, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendBaidu1717060261608", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 796.8554609916414, "y": 118.29579221609046, "anchorIndex": 0}, "id": "edge-0.87147680450916831718290084437", "minCurveOffset": 10, "source": "Gpt-4o1718289488691", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -29.456753600556027, "y": 136.69412372315207, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt.py1716518404189", "targetAnchor": 0, "targetAnchorID": "Input11715761406972", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 790.5918916608041, "y": 316.38253501329405, "anchorIndex": 0}, "id": "edge-0.4442398744491921718290087223", "minCurveOffset": 10, "source": "Gpt-4o1718289488691", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -29.456753600556027, "y": 136.69412372315207, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-35-turbo1717056207234", "targetAnchor": 0, "targetAnchorID": "Input11717056217073", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -183.39583907321858, "y": 86.06912372315207, "anchorIndex": 2}, "id": "edge-0.72709180205889481718373283670", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 2, "sourceAnchorID": "Output21717055988191", "startPoint": {"x": -419.6341021847623, "y": 118.20470626090213, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-4o1718289488691", "targetAnchor": 2, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": -183.39583907321858, "y": 86.06912372315207, "anchorIndex": 2}, "id": "edge-0.6883706135370941718373285747", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -419.6341021847623, "y": 98.00470626090211, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "Gpt-4o1718289488691", "targetAnchor": 2, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 2178.0739183555615, "y": 178.48233187377983, "anchorIndex": 3}, "id": "edge-0.39826818191343771718720618960", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -419.6341021847623, "y": 98.00470626090211, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1716534692184", "targetAnchor": 3, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1851.6646481712894, "y": 290.23717423194637, "anchorIndex": 3}, "id": "edge-0.8741533389619011718720625614", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": -419.6341021847623, "y": 98.00470626090211, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1715761489952", "targetAnchor": 3, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 791.8868080063193, "y": 519.5645513069392, "anchorIndex": 3}, "id": "edge-0.72380840939828131718720630897", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 2, "sourceAnchorID": "Output21717055988191", "startPoint": {"x": -419.6341021847623, "y": 118.20470626090213, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1717060272229", "targetAnchor": 3, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1465.87864977382, "y": 1007.4211315794632, "anchorIndex": 0}, "id": "edge-0.243598020985566381719129953420", "minCurveOffset": 10, "source": "GradeBaidu1718178913018", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 1325.731051243268, "y": 1006.9827189673742, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "wenxin-4.py1719129937000", "targetAnchor": 0, "targetAnchorID": "Input11718026283102", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1834.0247696963052, "y": 947.2401421324282, "anchorIndex": 4}, "id": "edge-0.482416748903817141719129955350", "minCurveOffset": 10, "source": "wenxin-4.py1719129937000", "sourceAnchor": 1, "sourceAnchorID": "Output1", "startPoint": {"x": 1633.805450597265, "y": 1007.4211315794632, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "addExcel1718176391502", "targetAnchor": 4, "targetAnchorID": "Input5", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1837.604584563776, "y": 1081.6440616883556, "anchorIndex": 1}, "id": "edge-0.066300074502473551719129962205", "minCurveOffset": 10, "source": "wenxin-4.py1719129937000", "sourceAnchor": 2, "sourceAnchorID": "Output21719128338297", "startPoint": {"x": 1633.805450597265, "y": 1027.6211315794633, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "wenxin-4.py1719129959883", "targetAnchor": 1, "targetAnchorID": "Input21717385554197", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 2211.091593454172, "y": 1104.5950888245354, "anchorIndex": 3}, "id": "edge-0.9778259259353331719130056560", "minCurveOffset": 10, "source": "IfNode1717055917650", "sourceAnchor": 2, "sourceAnchorID": "Output21717055988191", "startPoint": {"x": -419.6341021847623, "y": 118.20470626090213, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage1719130039551", "targetAnchor": 3, "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 2207.0702552308294, "y": 1155.0950888245354, "anchorIndex": 0}, "id": "edge-0.8851749570777611719130061246", "minCurveOffset": 10, "source": "wenxin-4.py1719129959883", "sourceAnchor": 2, "sourceAnchorID": "Output1", "startPoint": {"x": 2001.5307209274122, "y": 1061.4440616883555, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage1719130039551", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "depth": 0, "endPoint": {"x": 1847.6423053375242, "y": 340.73717423194637, "anchorIndex": 0}, "id": "edge-0.87036332771858141719130159844", "minCurveOffset": 10, "source": "Gpt-4o1718026278679", "sourceAnchor": 2, "sourceAnchorID": "Output21719128338297", "startPoint": {"x": 1454.0390471426208, "y": -71.97151461780282, "anchorIndex": 2}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "SendMessage.py1715761489952", "targetAnchor": 0, "targetAnchorID": "Input1", "type": "line-dash"}, {"curveOffset": 20, "endPoint": {"x": 1837.604584563776, "y": 1061.4440616883555, "anchorIndex": 0}, "id": "edge-0.39040384046973121719220377150", "minCurveOffset": 10, "source": "SendBaidu1717060261608", "sourceAnchor": 1, "sourceAnchorID": "Output11", "startPoint": {"x": 111.0594086986022, "y": 418.5388112430215, "anchorIndex": 1}, "style": {"active": {"lineWidth": 1, "stroke": "rgb(95, 149, 255)"}, "selected": {"lineWidth": 2, "shadowBlur": 10, "shadowColor": "rgb(95, 149, 255)", "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "highlight": {"lineWidth": 2, "stroke": "rgb(95, 149, 255)", "text-shape": {"fontWeight": 500}}, "inactive": {"lineWidth": 1, "stroke": "rgb(234, 234, 234)"}, "disable": {"lineWidth": 1, "stroke": "rgb(245, 245, 245)"}, "lineWidth": 3, "stroke": "#000", "endArrow": {"path": "M 0,0 L 12,6 L 12,-6 Z", "fill": "#5c95ff", "d": 0}}, "target": "wenxin-4.py1719129959883", "targetAnchor": 0, "targetAnchorID": "Input11715761406972", "type": "line-dash", "depth": 0}]
unconnected_inputs = [{"source": None, "sourceAnchor": None, "target": "RefreshBaidu1717061708619", "anchorIndex": 0, "name": "Input1", "IsLabel": False, "Kind": "String", "Num": None, "Context": "", "Boolean": False}, {"source": None, "sourceAnchor": None, "target": "QueryExcel1717761887164", "anchorIndex": 0, "name": "\u8def\u5f84", "IsLabel": True, "Kind": "String", "Num": None, "Context": "", "Boolean": False}, {"source": None, "sourceAnchor": None, "target": "addExcel1718027435697", "anchorIndex": 0, "name": "\u8def\u5f84", "IsLabel": True, "Kind": "String", "Num": None, "Context": "", "Boolean": False}, {"source": None, "sourceAnchor": None, "target": "addExcel1718176391502", "anchorIndex": 0, "name": "\u8def\u5f84", "IsLabel": True, "Kind": "String", "Num": None, "Context": "", "Boolean": False}, {"source": None, "sourceAnchor": None, "target": "SendMessage1719130039551", "anchorIndex": 1, "name": "\u540d\u5b57", "IsLabel": True, "Kind": "String", "Num": None, "Context": "", "Boolean": False}]
unconnected_outputs = [{"source": "SendMessage.py1715761489952", "anchorIndex": 2, "target": None, "targetAnchor": None, "name": "OutPut1"}, {"source": "SendMessage.py1716534692184", "anchorIndex": 2, "target": None, "targetAnchor": None, "name": "OutPut1"}, {"source": "SendMessage.py1717060272229", "anchorIndex": 2, "target": None, "targetAnchor": None, "name": "OutPut1"}, {"source": "RefreshBaidu1717061708619", "anchorIndex": 1, "target": None, "targetAnchor": None, "name": "OutPut1"}, {"source": "SendMessage1719130039551", "anchorIndex": 2, "target": None, "targetAnchor": None, "name": "OutPut1"}]
def run_node(nodex):
    for index, value in enumerate(nodex['Inputs']):
        if index < len(Inputs):
            if(Inputs[index]['Kind'] == 'Num'):
                Inputs[index]['Num'] = nodex['Inputs'][index]['Num']
            elif(Inputs[index]['Kind'] == 'String'):
                Inputs[index]['Context'] = nodex['Inputs'][index]['Context']
            elif(Inputs[index]['Kind'] == 'Boolean'):
                Inputs[index]['Boolean'] = nodex['Inputs'][index]['Boolean']
            print(f'Index {index} is updated with value {value}Num{Inputs[index]["Num"]}')
        else:
            print(f'Warning: input_args contains more items than Inputs. Extra value {value} at index {index} is ignored.')
    for i, Input in enumerate(Inputs):
        for node in nodes:
            if node['id']==unconnected_inputs[i]['target']:
                node['Inputs'][unconnected_inputs[i]["anchorIndex"]]['Num']=Input['Num']
                node['Inputs'][unconnected_inputs[i]["anchorIndex"]]['Context']=Input['Context']
                node['Inputs'][unconnected_inputs[i]["anchorIndex"]]['Boolean']=Input['Boolean']
    for node in nodes:
        node['inputStatus'] = [False] * len(node['Inputs'])
        node['firstRun'] = True
        node['IsTrigger'] = False
        if node['TriggerLink']>0:
            node['IsTrigger'] = True
        for output in node['Outputs']:
            output['Num'] = 0
            output['Context'] = ''
        for input in node['Inputs']:
            input['isConnected'] = False
    # 检查每个节点的每个输入矛点是否都被连接
    for node in nodes:
        for index, input in enumerate(node['Inputs']):
            isConnected = any(edge['target'] == node['id'] and edge['targetAnchor'] == index for edge in edges)
            if isConnected and not input['Isnecessary']:
                node['Inputs'][index]['isConnected'] = True
    for i, uo in enumerate(unconnected_inputs):
        target_id = uo['target']
        anchor_index = uo['anchorIndex']
        for node in nodes:
            if node['id'] == target_id:
                if 0 <= anchor_index < len(node['Inputs']):
                    node['inputStatus'][anchor_index] = True
    start_nodes = [node for node in nodes if len(node['Inputs']) == 0 or all(node['inputStatus'])]
    for node in start_nodes:
        if node['ExprotAfterPrompt'] == '':
            temp = 'Please ensure the output is in JSON format\n{\n'
            for index, output in enumerate(node['ExprotAfterPrompt']):
                kind = ''
                if output['Kind'] == 'String':
                    kind = 'String'
                elif output['Kind'] == 'Num':
                    kind = 'Num'
                elif output['Kind'] == 'Boolean':
                    kind = 'Boolean'
                temp += f'"{output["Id"]}": "{output["Description"]}" (you need output type:{kind})\n'
            temp += '}\n'
            node['ExprotAfterPrompt'] = temp     
        export_prompt = node['prompt']
        matches = retrieve_content_within_braces(node['prompt'])
        for match in matches:
            for input in node['Inputs']:
                if input['name'] == match:
                    if input['Kind'] == 'Num':
                        export_prompt = export_prompt.replace(match, str(input['Num']))
                    elif input['Kind'] == 'String':
                        export_prompt = export_prompt.replace(match, input['Context'])
                    elif input['Kind'] == 'Boolean':
                        export_prompt = export_prompt.replace(match, str(input['Boolean']))
            export_prompt = export_prompt.replace('{{', '').replace('}}', '')
        print('prompt:', export_prompt)
        node['ExprotPrompt'] = export_prompt + '\n' + node.get('ExprotAfterPrompt', '')
        print('ExprotPrompt:', node['ExprotPrompt'])
        if not node.get('IsTrigger', False):
            execute_node(node)
    return Outputs
def retrieve_content_within_braces(text):
    return re.findall(r'{{(.*?)}}', text)
def run_node_route(node, node_name):
    data = request.json
    # 获取当前脚本的目录，而不是工作目录
    current_script_dir = os.path.dirname(os.path.abspath(__file__))
    script_path = os.path.join(current_script_dir, node_name)
    if not script_path.endswith('.py'):
        script_path += '.py'
    print('Script path:', script_path)  # Debug: Print the script path
    if not os.path.exists(script_path):
        return jsonify({'error': f'Script {node_name} not found'}), 404
    # 添加脚本目录到 sys.path 以便能够导入模块
    if os.path.dirname(script_path) not in sys.path:
        sys.path.append(os.path.dirname(script_path))
    try:
        module = __import__(os.path.splitext(node_name)[0])
        output = module.run_node(node)
        return jsonify({'output': output}), 200
    except Exception as e:
        error_info = traceback.format_exc()
        return jsonify({'error': str(e), 'trace': error_info}), 400
def execute_node(nodez):
    if nodez['firstRun'] and all(
        (not input['Isnecessary'] and not input.get('isConnected', False)) or nodez['inputStatus'][i]
        for i, input in enumerate(nodez['Inputs'])
    ):
        nodez['firstRun'] = False
        #检索同文件夹下的同名py文件，nodez['name']为文件名
        node_function_name = nodez['name']
        #检索同文件夹下的同名py文件，nodez['name']为文件名
        if not node_function_name.endswith('.py'):
            node_function_name += '.py'
        if not os.path.exists(node_function_name):
            response, status_code = run_node_route(nodez, node_function_name)  # 接收响应和状态码
            print('Response received with status:', status_code)  # Debug: Print the status code
            if status_code == 200:
                data = response.get_json()['output']
                print('Data received:', data)  # Debug: Print the data
                for i, output in enumerate(nodez['Outputs']):
                    if output['Kind'] == 'Num':
                        output['Num'] = data[i]['Num']
                    elif output['Kind'] == 'String':
                        output['Context'] = data[i]['Context']
                    elif output['Kind'] == 'Boolean':
                        output['Boolean'] = data[i]['Boolean']
                for i, uo in enumerate(unconnected_outputs):
                    source_id = uo["source"]
                    anchor_index = uo["anchorIndex"]
                    for node in nodes:
                        if node["id"] == source_id:
                            if len(node["Inputs"]) <= anchor_index < len(node["Inputs"]) + len(node["Outputs"]):
                                Outputs[i]= node["Outputs"][anchor_index-len(node["Inputs"])]  
                for io,edge in enumerate(edges): 
                    if edge['source'] == nodez['id']:
                        targetNode = next((n for n in nodes if n['id'] == edge['target']), None)
                        if targetNode and edge['targetAnchor'] == len(targetNode['Inputs']) + len(targetNode['Outputs']):
                            if data[edge['sourceAnchor'] - len(nodez['Inputs'])]['Boolean'] == True:
                                targetNode['IsTrigger'] = False
                        if (targetNode and len(targetNode['Inputs']) > edge['targetAnchor']) or (targetNode and len(targetNode['Inputs'])+len(targetNode['Outputs']) == edge['targetAnchor'] and targetNode['NodeKind'] == 'IfNode'):
                            if(targetNode and len(targetNode['Inputs']) > edge['targetAnchor']):
                                if(targetNode['Inputs'][edge['targetAnchor']]['Kind'] == 'Num'):
                                    targetNode['Inputs'][edge['targetAnchor']]['Num'] = data[edge['sourceAnchor'] - len(nodez['Inputs'])]['Num']
                                elif(targetNode['Inputs'][edge['targetAnchor']]['Kind'] == 'String'):
                                    targetNode['Inputs'][edge['targetAnchor']]['Context'] = data[edge['sourceAnchor'] - len(nodez['Inputs'])]['Context']
                                elif(targetNode['Inputs'][edge['targetAnchor']]['Kind'] == 'Boolean'):
                                    targetNode['Inputs'][edge['targetAnchor']]['Boolean'] = data[edge['sourceAnchor'] - len(nodez['Inputs'])]['Boolean']
                                print(f"Node {nodez['id']} output to Node {targetNode['id']}")
                                targetNode['inputStatus'][edge['targetAnchor']] = True
                            export_prompt = targetNode['prompt']
                            if targetNode['ExprotAfterPrompt'] == '':
                                temp = 'Please ensure the output is in JSON format\n{\n'
                                for index, output in enumerate(targetNode['ExprotAfterPrompt']):
                                    kind = ''
                                    if output['Kind'] == 'String':
                                        kind = 'String'
                                    elif output['Kind'] == 'Num':
                                        kind = 'Num'
                                    elif output['Kind'] == 'Boolean':
                                        kind = 'Boolean'
                                    temp += f'"{output["Id"]}": "{output["Description"]}" (you need output type:{kind})\n'
                                temp += '}\n'
                                targetNode['ExprotAfterPrompt'] = temp
                            matches = retrieve_content_within_braces(targetNode['prompt'])
                            for match in matches:
                                for input in targetNode['Inputs']:
                                    if input['name'] == match:
                                        if input['Kind'] == 'Num':
                                            export_prompt = export_prompt.replace(match, str(input['Num']))
                                        elif input['Kind'] == 'String':
                                            export_prompt = export_prompt.replace(match, input['Context'])
                                        elif input['Kind'] == 'Boolean':
                                            export_prompt = export_prompt.replace(match, str(input['Boolean']))
                                export_prompt = export_prompt.replace('{{', '').replace('}}', '')
                            print('prompt:', export_prompt)
                            targetNode['ExprotPrompt'] = export_prompt +'\n' + targetNode.get('ExprotAfterPrompt', '')
                            print('ExprotPrompt:', targetNode['ExprotPrompt'])
                            if not targetNode.get('IsTrigger', False):
                                execute_node(targetNode)
            else:
                print(f"Error executing node: {response.get_json()['error']}")
        else:
            print(f"Function {node_function_name} not found")